/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./js/maxi-parallax.js":
/*!*****************************!*\
  !*** ./js/maxi-parallax.js ***!
  \*****************************/
/***/ (function() {

eval("/* eslint-disable @wordpress/no-global-event-listener */\n// Parallax\nclass Parallax {\n\tconstructor(el, speed) {\n\t\tthis.wrapperEl = el;\n\t\tthis.imgEl = el.querySelector('img');\n\n\t\tthis.getIsMobile();\n\t\tthis.getWinValues();\n\t\tthis.getOptions(speed);\n\n\t\tthis.init();\n\t}\n\n\tgetIsMobile() {\n\t\tthis.isMobile =\n\t\t\t/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n\t\t\t\tnavigator.userAgent\n\t\t\t);\n\t}\n\n\tgetDeviceHeight() {\n\t\t// eslint-disable-next-line no-unused-expressions\n\t\tthis.deviceHelper;\n\n\t\tif (!this.deviceHelper && document.body) {\n\t\t\tthis.deviceHelper = document.createElement('div');\n\t\t\tthis.deviceHelper.style.cssText =\n\t\t\t\t'position: fixed; top: -9999px; left: 0; height: 100vh; width: 0;';\n\t\t\tdocument.body.appendChild(this.deviceHelper);\n\t\t}\n\n\t\treturn (\n\t\t\t(this.deviceHelper ? this.deviceHelper.clientHeight : 0) ||\n\t\t\twindow.innerHeight ||\n\t\t\tdocument.documentElement.clientHeight\n\t\t);\n\t}\n\n\tgetWinValues() {\n\t\tthis.winValues = {\n\t\t\twidth: window.innerWidth || document.documentElement.clientWidth,\n\t\t\theight: this.isMobile\n\t\t\t\t? this.getDeviceHeight()\n\t\t\t\t: window.innerHeight || document.documentElement.clientHeight,\n\t\t\ty: window.pageYOffset,\n\t\t};\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\tgetBoundingClientRect(element) {\n\t\tconst { top, right, bottom, left, width, height, x, y } =\n\t\t\telement.getBoundingClientRect();\n\n\t\treturn { top, right, bottom, left, width, height, x, y };\n\t}\n\n\tgetOptions(speed) {\n\t\tconst wrapperRect = this.getBoundingClientRect(this.wrapperEl);\n\t\tconst imgRect = this.getBoundingClientRect(this.imgEl);\n\n\t\tthis.options = {\n\t\t\tgeneral: {\n\t\t\t\t...this.options?.general,\n\t\t\t\t...(speed && { speed }),\n\t\t\t},\n\t\t\twrapper: {\n\t\t\t\t...wrapperRect,\n\t\t\t\tstyles: this.getWrapperStyles(wrapperRect),\n\t\t\t},\n\t\t\timg: {\n\t\t\t\t...imgRect,\n\t\t\t\tstyles: this.getImgStyles(wrapperRect),\n\t\t\t},\n\t\t};\n\t}\n\n\tgetWrapperStyles(wrapperRect) {\n\t\tif (!this.options) return null;\n\n\t\tconst { width, height } = wrapperRect ?? this.options.wrapper;\n\n\t\treturn `\n\t\t clip: rect(0 ${width}px ${height}px 0);\n\t\t clip: rect(0, ${width}px, ${height}px, 0);\n\t `.trim();\n\t}\n\n\tgetImgStyles(wrapperRect) {\n\t\tif (!this.options) return null;\n\n\t\tconst { height: winHeight } = this.winValues;\n\t\tconst { speed } = this.options.general;\n\t\tconst {\n\t\t\theight: rawHeight,\n\t\t\twidth,\n\t\t\tleft,\n\t\t\ttop,\n\t\t} = wrapperRect ?? this.options.wrapper;\n\n\t\t// Scroll distance\n\t\tlet scrollDist = 0;\n\n\t\tif (speed < 0) {\n\t\t\tscrollDist = speed * Math.max(rawHeight, winHeight);\n\n\t\t\tif (winHeight < rawHeight) {\n\t\t\t\tscrollDist -= speed * (rawHeight - winHeight);\n\t\t\t}\n\t\t} else {\n\t\t\tscrollDist = speed * (rawHeight + winHeight);\n\t\t}\n\n\t\t// Height\n\t\tlet height = rawHeight;\n\n\t\tif (speed > 1) {\n\t\t\theight = Math.abs(scrollDist - winHeight);\n\t\t} else if (speed < 0) {\n\t\t\theight = scrollDist / speed + Math.abs(scrollDist);\n\t\t} else {\n\t\t\theight += (winHeight - rawHeight) * (1 - speed);\n\t\t}\n\n\t\tscrollDist /= 2;\n\n\t\t// Margin top\n\t\tconst marginTop = (winHeight - height) / 2;\n\n\t\t// Transform\n\t\tconst fromViewportCenter =\n\t\t\t1 - 2 * ((winHeight - top) / (winHeight + rawHeight));\n\t\tconst positionY = scrollDist * fromViewportCenter;\n\n\t\treturn `\n\t\t height: ${height}px;\n\t\t margin-top: ${marginTop}px;\n\t\t left: ${left}px;\n\t\t width: ${width}px;\n\t\t transform: translate3d(0,${positionY}px,0);\n\t `.trim();\n\t}\n\n\tgetIsInViewport() {\n\t\tconst {\n\t\t\twrapper: { bottom, right, top, left },\n\t\t} = this.options;\n\t\tconst { height: winHeight, width: winWidth } = this.winValues;\n\n\t\treturn (\n\t\t\tbottom >= 0 && right >= 0 && top <= winHeight && left <= winWidth\n\t\t);\n\t}\n\n\tinit() {\n\t\tthis.onResize();\n\t\tthis.onScroll();\n\n\t\twindow.addEventListener('resize', this.onResize.bind(this));\n\t\twindow.addEventListener('orientationchange', this.onResize.bind(this));\n\t\twindow.addEventListener('scroll', this.onScroll.bind(this));\n\t}\n\n\tonResize() {\n\t\tthis.getOptions();\n\t\tthis.getIsMobile();\n\t\tthis.getWinValues();\n\n\t\tif (this.getIsInViewport()) {\n\t\t\tthis.wrapperClip();\n\t\t\tthis.imgStyles();\n\t\t}\n\t}\n\n\tonScroll() {\n\t\tthis.getOptions();\n\t\tthis.getIsMobile();\n\t\tthis.getWinValues();\n\n\t\tif (this.getIsInViewport()) {\n\t\t\tthis.imgStyles();\n\t\t}\n\t}\n\n\twrapperClip() {\n\t\tthis.wrapperEl.style.cssText = this.options.wrapper.styles;\n\t}\n\n\timgStyles() {\n\t\tthis.imgEl.style.cssText = this.options.img.styles;\n\t}\n}\n\n// parallax Effects\nconst parallaxElements = document.querySelectorAll('.maxi-parallax-effect');\nparallaxElements.forEach(elem => {\n\t// eslint-disable-next-line no-undef\n\tif (!maxi_custom_data.custom_data) return;\n\n\tconst parallaxID = elem.id;\n\n\tconst parallaxData =\n\t\t// eslint-disable-next-line no-undef\n\t\tmaxi_custom_data.custom_data[parallaxID] !== undefined\n\t\t\t? // eslint-disable-next-line no-undef\n\t\t\t  maxi_custom_data.custom_data[parallaxID]\n\t\t\t: null;\n\n\tif (parallaxData !== null) {\n\t\t// Parallax Effect\n\t\tif ('bgParallaxLayers' in parallaxData) {\n\t\t\tparallaxData.bgParallaxLayers.forEach(layer => {\n\t\t\t\tconst {\n\t\t\t\t\tid,\n\t\t\t\t\t'background-image-parallax-speed': parallaxSpeed,\n\t\t\t\t\t'background-image-parallax-direction': parallaxDirection,\n\t\t\t\t} = layer;\n\n\t\t\t\tconst parallaxElem = document.querySelector(\n\t\t\t\t\t`#${parallaxID} > .maxi-background-displayer > .maxi-background-displayer__${id}`\n\t\t\t\t);\n\n\t\t\t\tconst direction = parallaxDirection === 'up' ? 1 : -1;\n\t\t\t\tconst speed = parallaxSpeed / 10 + direction;\n\n\t\t\t\twindow.addEventListener('scroll', () => {\n\t\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\t\tnew Parallax(parallaxElem, speed);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n});\n\n\n//# sourceURL=webpack://maxi-blocks/./js/maxi-parallax.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./js/maxi-parallax.js"]();
/******/ 	
/******/ })()
;