/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./js/maxi-bg-video.js":
/*!*****************************!*\
  !*** ./js/maxi-bg-video.js ***!
  \*****************************/
/***/ (function() {

eval("// Background Video Actions\nconst videoBg = () => {\n\tconst videoPlayerElements = document.querySelectorAll(\n\t\t'.maxi-background-displayer__video-player'\n\t);\n\tvideoPlayerElements.forEach(videoPlayerElement => {\n\t\tif (videoPlayerElement) {\n\t\t\tconst videoEnd = videoPlayerElement.getAttribute('data-end');\n\t\t\tconst videoType = videoPlayerElement.getAttribute('data-type');\n\n\t\t\t// Make youtube & vimeo videos cover the container\n\t\t\tif (videoType === 'youtube' || videoType === 'vimeo') {\n\t\t\t\tconst setVideoSize = () => {\n\t\t\t\t\tconst iframeElement =\n\t\t\t\t\t\tvideoPlayerElement.querySelector('iframe');\n\t\t\t\t\tconst reduceBorder = videoPlayerElement.classList.contains(\n\t\t\t\t\t\t'maxi-background-displayer__video-player--no-border'\n\t\t\t\t\t);\n\t\t\t\t\tconst elWidth = videoPlayerElement.offsetWidth;\n\t\t\t\t\tconst elHeight = videoPlayerElement.offsetHeight;\n\n\t\t\t\t\tconst proportion = reduceBorder ? 2.4 : 1.77;\n\n\t\t\t\t\tconst hasBorder = elWidth / elHeight < proportion;\n\n\t\t\t\t\t// Avoids Y axis black border\n\t\t\t\t\tif (hasBorder) {\n\t\t\t\t\t\tconst landscapeProportion =\n\t\t\t\t\t\t\tproportion - elWidth / elHeight + 1;\n\t\t\t\t\t\tconst portraitProportion =\n\t\t\t\t\t\t\tproportion + (elHeight / elWidth - 1) * 2;\n\n\t\t\t\t\t\tconst newScale =\n\t\t\t\t\t\t\tlandscapeProportion < proportion\n\t\t\t\t\t\t\t\t? landscapeProportion\n\t\t\t\t\t\t\t\t: portraitProportion;\n\n\t\t\t\t\t\tiframeElement.style.transform = `translate(-50%, -50%) scale(${\n\t\t\t\t\t\t\tnewScale * 1.033\n\t\t\t\t\t\t})`; // increase of 33% to ensure\n\t\t\t\t\t} else iframeElement.style.transform = null;\n\n\t\t\t\t\tconst isLandscape = elWidth > elHeight * 1.77;\n\n\t\t\t\t\tconst newHeight = isLandscape ? elWidth / 1.77 : elHeight;\n\n\t\t\t\t\tiframeElement.style.height = `${newHeight}px`; // 1.77 is the aspect ratio 16:9\n\t\t\t\t};\n\n\t\t\t\t// eslint-disable-next-line @wordpress/no-global-event-listener\n\t\t\t\twindow.addEventListener('resize', setVideoSize);\n\t\t\t\tsetVideoSize();\n\t\t\t}\n\n\t\t\tif (videoType === 'vimeo' && videoEnd) {\n\t\t\t\tconst scriptsArray = Array.from(window.document.scripts);\n\n\t\t\t\tconst vimeoIsMounted = scriptsArray.findIndex(\n\t\t\t\t\tscript => script.getAttribute('id') === 'maxi-vimeo-sdk'\n\t\t\t\t);\n\n\t\t\t\tif (vimeoIsMounted === -1) {\n\t\t\t\t\tconst script = document.createElement('script');\n\t\t\t\t\tscript.src = 'https://player.vimeo.com/api/player.js';\n\t\t\t\t\tscript.id = 'maxi-vimeo-sdk';\n\t\t\t\t\tscript.async = true;\n\t\t\t\t\tscript.onload = () => {\n\t\t\t\t\t\t// Cleanup onload handler\n\t\t\t\t\t\tscript.onload = null;\n\n\t\t\t\t\t\t// Pause all vimeo videos on the page at the endTime\n\t\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t\tcontainerElements.forEach(elem => {\n\t\t\t\t\t\t\tconst videoPlayerElement = elem.querySelector(\n\t\t\t\t\t\t\t\t'.maxi-background-displayer__video-player'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst videoEnd =\n\t\t\t\t\t\t\t\tvideoPlayerElement.getAttribute('data-end');\n\t\t\t\t\t\t\tconst videoType =\n\t\t\t\t\t\t\t\tvideoPlayerElement.getAttribute('data-type');\n\n\t\t\t\t\t\t\tif (videoType === 'vimeo' && videoEnd) {\n\t\t\t\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t\t\t\tconst player = new Vimeo.Player(\n\t\t\t\t\t\t\t\t\tvideoPlayerElement.querySelector('iframe')\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t// eslint-disable-next-line func-names\n\t\t\t\t\t\t\t\tplayer.on('timeupdate', function (data) {\n\t\t\t\t\t\t\t\t\tif (data.seconds > videoEnd) {\n\t\t\t\t\t\t\t\t\t\tplayer.pause();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\tdocument.body.appendChild(script);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n};\n\n// eslint-disable-next-line @wordpress/no-global-event-listener\nwindow.addEventListener('load', videoBg);\n\n\n//# sourceURL=webpack://maxi-blocks/./js/maxi-bg-video.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./js/maxi-bg-video.js"]();
/******/ 	
/******/ })()
;