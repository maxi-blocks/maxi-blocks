.maxi-accordion-control {
	margin: 0px 0 1px;

	&__item {
		background: white;

		&[data-name='dots'],
		&[data-name='icon colour'],
		&[data-name='arrows'],
		&[data-name='box shadow'],
		&[data-name='icon'],
		&[data-name='border'],
		&[data-name='active icon'] {
			.maxi-accordion-control__item__panel {
				padding: 0;
			}
		}

		.maxi-accordion-tab {
			&:after {
				content: '';
				z-index: 1;
				position: absolute;
				width: 100%;
				height: 1px;
			}
		}
		.maxi-accordion-icon {
			max-width: 24px;
			max-height: 24px;
		}

		&__panel {
			&:not(.maxi-accordion-control__item__panel--disable-padding) {
				padding: 0px 9px 0;
			}
		}

		&:last-child {
			.maxi-accordion-control__item__button {
				border-bottom: 1px solid var(--maxi-grey-light);
				&[aria-expanded='true'] {
					// border-color: transparent;
				}
			}
		}
		&__button {
			position: relative;
			z-index: 2;
			display: flex;
			align-items: center;
			padding: 10px;
			border-top: 1.5px solid var(--maxi-grey-light);
			margin-bottom: 0px;
			background: var(--maxi-white);
			transition: background-color 0.5s, color 0.5s;

			&:hover {
				background: var(--maxi-whisper-green);
				cursor: pointer;
				color: var(--maxi-black);
			}
			&:active,
			&:focus {
				background: var(--maxi-pastel-green);
			}
			&:before {
				margin-right: 8px;
			}
			&:after {
				content: url('data:image/svg+xml; utf8, <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 5.783 9.578"><path fill="rgba(180, 180, 180, 0.9)" d="M5.783 4.758a.963.963 0 01-.283.684L1.651 9.295A.967.967 0 01.283 7.927l3.179-3.169L.293 1.59A.963.963 0 011.651.232L5.5 4.084a.963.963 0 01.283.674z" /></svg>');
				position: absolute;
				top: 50%;
				right: 10px;
				width: 6px;
				transform: translateY(-50%) rotate(0);
				transform-origin: center;
				transition: transform 0.3s linear;

				@at-root .rtl #{&} {
					right: unset;
					left: 10px;
				}
			}
			&[aria-expanded='true'] {
				background: var(--maxi-white);

				&:after {
					transform: translateY(-50%) rotate(90deg);
				}
			}
		}
		&--active {
			&:before {
				content: '';
				position: absolute;
				top: 50%;
				left: 3px;
				z-index: 1;
				width: 6px;
				height: 6px;
				border-radius: 50%;
				background-color: var(--maxi-light-blue-alt);
				margin-left: 5px;
				transform: translateY(-50%);
			}

			&.maxi-accordion-control__item__button {
				padding-left: 25px; /* Add extra padding for the dot */
			}
		}
	}
	&--nested {
		margin-bottom: 0;
		.maxi-accordion-control__item {
			&:last-child {
				margin-bottom: 0;
			}
		}
		.maxi-accordion-control__item__button {
			background: var(--maxi-white);
			&:hover {
				background: var(--maxi-pastel-green);
			}
		}
	}
}
.maxi-context-loop,
.maxi-repeater {
	margin-top: 10px !important;
}

/*
 * Scoped override: when AccordionControl is used with the
 * `maxi-accordion-control--accordion-maxi` hook (Accordion Maxi block
 * inspector), remove default panel padding so block-specific styles can
 * define it. This targets the inspector sidebar context because this
 * stylesheet is bundled globally with components.
 */
.maxi-accordion-control.maxi-accordion-control--accordion-maxi {
	.maxi-accordion-control__item__panel:not(.maxi-accordion-control__item__panel--disable-padding) {
		padding: 0 !important;
	}
}
