{"version":3,"sources":["@wordpress/compose/src/higher-order/with-global-events/listener.js"],"names":["Listener","listeners","handleEvent","bind","eventType","instance","window","addEventListener","push","length","removeEventListener","event","type"],"mappings":";;;;;;;;;;;;;AAGA;;AAHA;;;;AAKA;;;;;IAKMA,Q;AACL,sBAAc;AAAA;AACb,SAAKC,SAAL,GAAiB,EAAjB;AAEA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAuB,IAAvB,CAAnB;AACA;;;;wBAEIC,S,EAAWC,Q,EAAW;AAC1B,UAAK,CAAE,KAAKJ,SAAL,CAAgBG,SAAhB,CAAP,EAAqC;AACpC;AACAE,QAAAA,MAAM,CAACC,gBAAP,CAAyBH,SAAzB,EAAoC,KAAKF,WAAzC;AACA,aAAKD,SAAL,CAAgBG,SAAhB,IAA8B,EAA9B;AACA;;AAED,WAAKH,SAAL,CAAgBG,SAAhB,EAA4BI,IAA5B,CAAkCH,QAAlC;AACA;;;2BAEOD,S,EAAWC,Q,EAAW;AAC7B,WAAKJ,SAAL,CAAgBG,SAAhB,IAA8B,qBAC7B,KAAKH,SAAL,CAAgBG,SAAhB,CAD6B,EAE7BC,QAF6B,CAA9B;;AAKA,UAAK,CAAE,KAAKJ,SAAL,CAAgBG,SAAhB,EAA4BK,MAAnC,EAA4C;AAC3C;AACAH,QAAAA,MAAM,CAACI,mBAAP,CAA4BN,SAA5B,EAAuC,KAAKF,WAA5C;AACA,eAAO,KAAKD,SAAL,CAAgBG,SAAhB,CAAP;AACA;AACD;;;gCAEYO,K,EAAQ;AACpB,2BAAS,KAAKV,SAAL,CAAgBU,KAAK,CAACC,IAAtB,CAAT,EAAuC,UAAEP,QAAF,EAAgB;AACtDA,QAAAA,QAAQ,CAACH,WAAT,CAAsBS,KAAtB;AACA,OAFD;AAGA;;;;;eAGaX,Q","sourcesContent":["/**\n * External dependencies\n */\nimport { forEach, without } from 'lodash';\n\n/**\n * Class responsible for orchestrating event handling on the global window,\n * binding a single event to be shared across all handling instances, and\n * removing the handler when no instances are listening for the event.\n */\nclass Listener {\n\tconstructor() {\n\t\tthis.listeners = {};\n\n\t\tthis.handleEvent = this.handleEvent.bind( this );\n\t}\n\n\tadd( eventType, instance ) {\n\t\tif ( ! this.listeners[ eventType ] ) {\n\t\t\t// Adding first listener for this type, so bind event.\n\t\t\twindow.addEventListener( eventType, this.handleEvent );\n\t\t\tthis.listeners[ eventType ] = [];\n\t\t}\n\n\t\tthis.listeners[ eventType ].push( instance );\n\t}\n\n\tremove( eventType, instance ) {\n\t\tthis.listeners[ eventType ] = without(\n\t\t\tthis.listeners[ eventType ],\n\t\t\tinstance\n\t\t);\n\n\t\tif ( ! this.listeners[ eventType ].length ) {\n\t\t\t// Removing last listener for this type, so unbind event.\n\t\t\twindow.removeEventListener( eventType, this.handleEvent );\n\t\t\tdelete this.listeners[ eventType ];\n\t\t}\n\t}\n\n\thandleEvent( event ) {\n\t\tforEach( this.listeners[ event.type ], ( instance ) => {\n\t\t\tinstance.handleEvent( event );\n\t\t} );\n\t}\n}\n\nexport default Listener;\n"]}