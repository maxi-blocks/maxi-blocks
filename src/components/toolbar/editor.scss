// Maxi Toolbar Styles - Optimized & Refactored
// =============================================

// Main toolbar popover container with consolidated CSS variables
.maxi-toolbar__popover {
	// Popover dimensions (consolidate min-width patterns)
	--mx-popover-width-xs: 176px; // icon-position
	--mx-popover-width-sm: 216px; // icon-size
	--mx-popover-width-md2: 230px; // size, slider-settings
	--mx-popover-width-md: 280px; // dynamic-content, context-loop, link
	--mx-popover-width-lg: 300px; // border, box-shadow, icon-color, text-color, etc.
	--mx-popover-width-xl: 350px; // reusable-blocks
	--mx-popover-width-xxl: 376px; // text-options font
	--mx-popover-width-xxxl: 392px; // column-pattern

	// Button dimensions (standardize all button sizing)
	--mx-btn-size: 36px; // main button size
	--mx-btn-width: 34px; // button width variant
	--mx-btn-min-width: 22px; // minimum button size
	--mx-btn-padding: 8px; // button internal padding

	// Icon sizing
	--mx-icon-size: 16px; // standard icon (was 1rem)
	--mx-icon-sm: 14px; // small icon
	--mx-icon-lg: 20px; // large icon
	--mx-icon-arrow: 6px; // arrow icons

	// Toolbar specific sizing
	--mx-toolbar-size: 32px; // main toolbar size (optimized from 2rem)
	--mx-indicator-size: 15px; // indicator badge size
	--mx-tooltip-offset: -24px; // tooltip positioning

	// Spacing tokens (replace scattered spacing)
	--mx-spacing-xs: 3px;
	--mx-spacing-sm: 5px;
	--mx-spacing-md: 8px;
	--mx-spacing-lg: 10px;
	--mx-spacing-xl: 12px;
	--mx-spacing-xxl: 20px;

	// Border system
	--mx-border: 1px solid var(--maxi-grey-light);
	--mx-border-active: 2px solid var(--maxi-primary-color);
	--mx-border-separator: 1px solid var(--maxi-grey-light);
	--mx-border-width: 1px;

	// Border radius
	--mx-radius: 4px;
	--mx-radius-sm: 2px;
	--mx-radius-circle: 50%;
	--mx-radius-button: 10px;

	// Transitions (consolidate all timing)
	--mx-transition: all 0.3s ease;
	--mx-transition-bg: background-color 0.3s;
	--mx-transition-transform: transform 0.3s linear;

	// Shadows
	--mx-shadow: 0 6px 8px 0 rgba(0, 0, 0, 0.08);
	--mx-shadow-popover: 0 -2px 8px 0 rgba(0, 0, 0, 0.05);
	--mx-shadow-light: 0 2px 8px rgba(0, 0, 0, 0.1);

	// Z-index management
	--mx-z-base: 9999997;
	--mx-z-toolbar: 9999998;
	--mx-z-hover: 9999999;
	--mx-z-max: 99999999;

	// Typography
	--mx-font-size: 16px;
	--mx-font-size-sm: 12px;
	--mx-font-size-xs: 10px;
	--mx-font-weight-normal: 400;
	--mx-font-weight-medium: 500;
	--mx-font-weight-bold: 700;
	--mx-line-height: 1;

	// Color aliases for better semantics
	--mx-color-text: var(--maxi-black);
	--mx-color-text-light: var(--maxi-grey);
	--mx-color-text-inverse: var(--maxi-white);
	--mx-color-primary: var(--maxi-primary-color);
	--mx-color-secondary: var(--maxi-secondary-color);
	--mx-color-bg: var(--maxi-white);
	--mx-color-bg-hover: var(--maxi-pastel-green);
	--mx-color-bg-active: var(--maxi-whisper-green);

	z-index: var(--mx-z-toolbar);

	// Apply transition to all elements
	*,
	*::before,
	*::after {
		transition: var(--mx-transition);
	}

	// Caption and icon containers
	&-caption,
	&--icon {
		z-index: var(--mx-z-base);

		&:hover {
			z-index: var(--mx-z-hover);
		}
	}

	// More indicator badge
	.toolbar-more-indicator {
		position: absolute;
		top: 0;
		right: -16px;
		display: flex;
		align-items: center;
		justify-content: center;
		width: var(--mx-indicator-size);
		height: 20px;
		margin-left: var(--mx-spacing-md);
		background: var(--mx-color-primary);
		border-radius: 0 var(--mx-radius) var(--mx-radius) 0;

		&--repeater {
			background: var(--maxi-tertiary-color);
		}
	}

	// Popover content
	.components-popover__content {
		overflow: visible !important;
		background-color: transparent;
		border: none;
		box-shadow: none;
		outline: none;

		// Main toolbar wrapper
		.toolbar-wrapper {
			position: relative;
			top: -23px;
			left: 50%;
			display: flex;
			width: min-content;
			background-color: var(--mx-color-bg);
			border: var(--mx-border);
			border-radius: 0;
			box-shadow: var(--mx-shadow);
			transform: translateX(-50%);

			// Pinned state
			&.pinned--true .maxi-breadcrumbs {
				transform: scaleX(1);

				.maxi-breadcrumbs__item {
					opacity: 1;
					transition-delay: 0.2s;
				}
			}

			// Icon and caption toolbar positioning
			&.icon-toolbar,
			&.caption-toolbar {
				top: 5px;
			}

			// Breadcrumbs tooltip
			.breadcrumbs-pin-tooltip {
				position: absolute;
				top: var(--mx-tooltip-offset);
				left: 0;
				z-index: 5;
				padding: 7px var(--mx-spacing-sm);
				font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
					Inter, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
					sans-serif;
				font-size: 12px;
				font-weight: 400;
				line-height: 1;
				color: var(--maxi-white);
				text-align: center;
				visibility: hidden;
				background-color: rgba(0, 0, 0, 0.85);
				border-radius: 2px;
				opacity: 0;
				pointer-events: none;
			}

			.breadcrumbs-pin:hover .breadcrumbs-pin-tooltip {
				visibility: visible;
				opacity: 1;
				transition-delay: 0.5s;
			}

			// Custom label
			.toolbar-block-custom-label {
				position: absolute;
				bottom: -22px;
				left: 0;
				display: inline-block;
				width: auto;
				height: 20px;
				padding: var(--mx-spacing-xs) var(--mx-spacing-md);
				font-family: 'Inter', sans-serif !important;
				font-size: var(--mx-font-size-xs);
				font-weight: var(--mx-font-weight-normal);
				line-height: var(--mx-line-height);
				color: var(--mx-color-text-inverse);
				white-space: pre;
				background: var(--mx-color-primary);
				border-radius: var(--mx-radius) 0 0 var(--mx-radius);

				&--repeater {
					background: var(--maxi-tertiary-color);
				}

				&__block-style {
					padding-left: var(--mx-radius);
					text-transform: capitalize;
				}

				.breadcrumbs-pin {
					display: inline-block;
					padding-right: var(--mx-spacing-md);
				}
			}

			// Button focus state and main toolbar buttons
			button:not(.maxi-color-control__palette-box):focus,
			> div:not(.toolbar-block-custom-label),
			> button {
				padding: 0;
				border-radius: 0;
				outline: none;
				box-shadow: none;
			}

			// Main toolbar buttons and divs
			> div:not(.toolbar-block-custom-label),
			> button {
				position: relative;
				display: flex;
				align-items: center;
				justify-content: center;
				width: var(--mx-toolbar-size);
				height: var(--mx-toolbar-size);
				background-color: var(--mx-color-bg);
				border-right: var(--mx-border);

				&.toolbar-item__more-settings {
					border-right: none;
				}

				&:last-child::after {
					content: none;
				}
			}

			// Toolbar items
			.toolbar-item {
				display: flex;
				align-items: center;
				justify-content: center;

				// Consolidated hover states for SVG elements
				&__dynamic-content,
				&__list-options,
				&__text-margin {
					&:hover,
					&[aria-expanded='true'] {
						svg,
						.toolbar-item__icon {
							ellipse,
							circle,
							line,
							rect,
							polyline,
							path {
								stroke: var(--mx-color-secondary);
							}
						}
					}
				}

				// Active link state
				&__link--active .toolbar-item__icon path {
					fill: var(--mx-color-primary);
				}

				// Icon alignment for text options and border
				&__text-options,
				&__border {
					.toolbar-item__icon {
						display: flex;
						align-items: center;
						justify-content: center;
					}
				}

				// Common button styles - consolidated
				&__more-settings .components-button,
				&__help .components-button,
				&__duplicate .components-button,
				&__move,
				&__replay,
				&__alignment:not(.maxi-dropdown),
				&__bold,
				&__italic,
				&__toolbarSizing,
				&__button,
				&__underline,
				&__strikethrough,
				&__subscript,
				&__superscript {
					width: 100%;
					height: 100%;
					padding: 0;
					background-color: transparent;
					border-radius: 0;
					fill: var(--mx-color-text);
					transition: var(--mx-transition);

					&::after {
						position: absolute;
						bottom: -1px;
						left: -1px;
						right: -1px;
						height: 0;
						content: '';
						background-color: var(--mx-color-secondary);
						transition: var(--mx-transition);
					}

					&:hover,
					&[aria-expanded='true'] {
						background-color: var(--mx-color-bg-hover);

						.toolbar-item__icon {
							ellipse,
							circle,
							line,
							rect,
							polyline,
							path {
								fill: var(--mx-color-secondary);
								stroke: var(--mx-color-secondary);
							}
						}
					}

					&:focus,
					&:visited {
						padding: 0;
						border-radius: 0;
						outline: none;
						box-shadow: none;
					}
				}

				// Bold and italic specific path styles
				&__bold,
				&__italic {
					&:hover path {
						stroke: var(--mx-color-secondary);
					}

					path {
						fill: var(--mx-color-text-inverse);
						stroke: var(--mx-color-text);
					}
				}

				// Replace image button
				&__replace-image {
					width: 80px;

					&__button {
						display: inline-block;
						font-weight: 700;
					}
				}

				// Icon styles
				&__icon {
					display: block;
					width: var(--mx-icon-size);
					height: var(--mx-icon-size);
					margin: auto;

					ellipse,
					circle,
					line,
					rect,
					polyline,
					path {
						transition: all var(--mx-transition);
					}
				}

				// Move cursor
				&__move {
					cursor: move;
				}
			}
		}
	}

	// Components button styles
	.components-button {
		font-family: 'Inter', sans-serif;

		&:hover {
			color: var(--mx-color-primary);
			transition: var(--mx-transition);
		}
	}

	// Responsive tabs
	.maxi-responsive-tabs-control .maxi-tabs-control {
		margin: 0;

		&__button {
			&:first-child {
				border-radius: var(--mx-radius-button) 0 0
					var(--mx-radius-button);
			}

			&:last-child {
				border-right: var(--mx-border);
				border-radius: 0 var(--mx-radius-button) var(--mx-radius-button)
					0;
			}
		}
	}

	// Color control active state
	.maxi-color-control__palette-box--active {
		background-color: var(--mx-color-bg-hover);
	}

	// Typography control
	.toolbar-item__typography-control__extra-text-options {
		.maxi-alignment-control {
			display: flex;
			gap: 0;

			button {
				width: 35px;
				border-radius: var(--mx-spacing-xs);
			}
		}
	}

	// Wrapper
	&__wrapper {
		display: flex;
		flex-wrap: wrap;
	}

	// Advanced button
	&__advanced-button {
		position: absolute;
		top: -10px;
		right: -10px;
		left: auto;
		min-width: 22px;
		height: 22px;
		padding: 0;
		background-color: var(--mx-color-primary);
		border-radius: var(--mx-radius-circle);
		transform: translate(0, 0);

		&:hover {
			background-color: var(--mx-color-secondary);
		}

		svg {
			width: var(--mx-icon-size);
			fill: var(--mx-color-text-inverse);
		}
	}

	// Dropdown options
	&__dropdown-options {
		display: flex;

		&__button {
			display: block;
			width: 100%;
			margin: 0 var(--mx-spacing-xs);
			background: var(--mx-color-bg);

			&:first-of-type {
				margin-left: 0;
			}

			&:last-of-type {
				margin-right: 0;
			}

			&:hover {
				color: inherit;
			}
		}
	}

	// Toggle button styles
	&__toggle-btn {
		.maxi-base-control__field {
			justify-content: space-between;
			border-radius: 5px;

			.maxi-base-control__label {
				flex: 3;
			}
		}

		.maxi-tabs-control__button {
			flex: 1;
			min-width: 40px;
			height: 30px;
			padding: 0;
			font-size: 13px;
			font-weight: 500;
			line-height: 13px;
			color: var(--mx-color-text-inverse);
			background-color: var(--mx-color-text);
			border-right: 0;
			border-bottom: none;
			opacity: 1;

			&:first-of-type input ~ label {
				border-radius: 5px 0 0 5px;

				@at-root .rtl #{&} {
					border-radius: 0 5px 5px 0;
				}
			}

			&:last-of-type input ~ label {
				border-radius: 0 5px 5px 0;

				@at-root .rtl #{&} {
					border-radius: 5px 0 0 5px;
				}
			}

			input {
				display: none;

				&:checked ~ label {
					position: relative;
					z-index: 1;
					background-color: var(--mx-color-bg-active);
					border: 2px solid var(--maxi-grey-light);
					border-bottom: 2px solid var(--mx-color-primary);
				}
			}

			label {
				display: block;
				height: 100%;
				line-height: 26px;
				text-align: center;
				border: 2px solid var(--maxi-grey);
			}
		}
	}

	// Arrow styling
	&::before,
	&::after {
		z-index: -1;
		display: none;
		border-color: var(--maxi-grey-dark);
	}

	// Base control styles - consolidated
	.maxi-base-control,
	.components-base-control {
		.components-range-control {
			display: none;
		}

		&__field {
			color: var(--mx-color-text);

			.components-range-control__track + span span {
				background-color: var(--mx-color-bg);

				&::before {
					border-color: var(--maxi-grey-dark);
				}
			}

			.components-range-control__number {
				color: var(--mx-color-text);
				background-color: transparent;
				border-color: var(--maxi-grey);
			}

			.maxi-select-control__input option {
				color: var(--mx-color-text);
			}

			.components-button.is-secondary {
				background-color: transparent;
				border-color: var(--maxi-grey);

				&:hover {
					background-color: transparent;
				}

				svg {
					fill: var(--mx-color-text);
				}
			}
		}

		&__label {
			color: var(--mx-color-text);
		}
	}

	// Number input styles
	input[type='number'] {
		flex: 2;
		color: var(--maxi-grey);
		border: var(--mx-border);

		&::placeholder {
			color: var(--maxi-grey);
			opacity: 0.8;
		}
	}

	// Dimensions control
	.maxi-dimensions-control {
		color: var(--mx-color-text-inverse);

		&_sync {
			width: 36px;
			background-color: transparent;
			border-color: var(--maxi-grey);

			&:hover {
				background-color: transparent;
			}

			&[aria-pressed='true'] {
				border-color: var(--mx-color-text-inverse);

				svg {
					fill: var(--mx-color-text-inverse);
				}
			}
		}

		&__mobile-controls-item {
			height: var(--mx-btn-size, 36px);
			border-color: var(--maxi-grey);

			svg {
				color: var(--mx-color-text-inverse);
				fill: currentColor;
			}
		}

		&__number {
			color: var(--mx-color-text-inverse);
			background-color: transparent;
			border-color: var(--maxi-grey);
		}
	}

	// Tabs control
	.maxi-tabs-control {
		&__button {
			padding: var(--mx-spacing-sm) 0;
			font-weight: 400;
			color: var(--maxi-grey-dark);
			background: transparent;
			border: var(--mx-border);
			border-right: none;

			&[aria-pressed='true'] {
				font-weight: var(--mx-font-weight-bold);
				color: var(--mx-color-primary);
				background-color: var(--mx-color-bg-active);
			}
		}
	}

	// Tabs content
	.maxi-tabs-content {
		width: 100%;

		.components-base-control__field {
			display: flex;
		}

		.components-base-control__label {
			flex-basis: 100%;
		}

		input[type='number'] {
			width: 3.5rem;
		}
	}
}

// Popover content overrides
body .toolbar-item__popover {
	margin-top: 0;

	// Reset button icons
	button.components-range-control__reset,
	button.components-circular-option-picker__clear {
		&::before {
			content: url('data:image/svg+xml; utf8, <svg xmlns="http://www.w3.org/2000/svg" id="Layer_1" data-name="Layer 1" viewBox="0 0 16 15.7"><path fill="var(--maxi-whites)" d="M16.5 1.1v5a.91.91 0 01-.3.7.91.91 0 01-.7.3h-5.1a.91.91 0 01-.7-.3 1 1 0 010-1.4.91.91 0 01.7-.3H13A8.09 8.09 0 0011 3a4.46 4.46 0 00-2.6-.8 5.66 5.66 0 00-4.1 1.7A5.3 5.3 0 002.6 8a5.66 5.66 0 001.7 4.1 5.66 5.66 0 004.1 1.7 5.75 5.75 0 003.4-1.1 5.63 5.63 0 002.1-2.9 1 1 0 01.5-.6 1.41 1.41 0 01.9-.1 1 1 0 01.6.5 1.06 1.06 0 01.1.8 7.49 7.49 0 01-2.9 3.9 7.67 7.67 0 01-4.6 1.5 7.7 7.7 0 01-5.6-2.3A7.56 7.56 0 01.5 8a7.87 7.87 0 012.3-5.6A7.7 7.7 0 018.4.1a3.08 3.08 0 011 .1c.3 0 .6.1.9.1a1.33 1.33 0 01.8.3 3.63 3.63 0 00.7.3 2.09 2.09 0 01.6.4c.2.2.4.3.5.4l.5.5c.2.2.3.4.4.4s.2.2.4.5a3 3 0 00.3.4V1.1a.91.91 0 01.3-.7 1 1 0 011.4 0 .91.91 0 01.3.7z" transform="translate(-.5 -.1)"/> </svg>');
		}
	}

	// Popover content
	.components-popover__content {
		min-width: auto;
		padding: var(--mx-spacing-lg) 11px 0 14px;
		margin-left: -2px;
		overflow: visible;
		background-color: var(--mx-color-bg);
		border: var(--mx-border);
		border-radius: 0;
		box-shadow: var(--mx-shadow-popover);
		outline: none;

		* {
			font-family: 'Inter', sans-serif;
		}

		// Color control - optimized
		.maxi-color-control {
			margin-bottom: var(--mx-spacing-md);
			color: var(--mx-color-text-inverse);

			button.maxi-components-button.maxi-reset-button {
				margin-top: -4px;
			}

			.components-custom-gradient-picker {
				.components-base-control__field {
					margin-bottom: var(--mx-spacing-md);
				}

				.components-angle-picker-control {
					&__angle-circle-indicator,
					&__angle-circle {
						border-color: var(--maxi-grey);
					}
				}

				&__toolbar {
					background: none;

					button.components-toolbar__control {
						border-color: var(--maxi-grey);

						&.is-pressed,
						&:hover {
							background-color: var(--maxi-grey);
							border-color: var(--maxi-grey);

							> svg {
								background: none;
							}
						}
					}
				}
			}

			&__items {
				color: var(--mx-color-text-inverse);

				.maxi-tabs-control__button {
					background-color: var(--maxi-grey);
					border-color: var(--maxi-grey);
				}

				input:checked ~ label {
					background-color: var(--maxi-grey);
				}

				svg {
					fill: var(--mx-color-text-inverse);

					path {
						stroke: var(--mx-color-text-inverse);
					}
				}
			}

			&__display {
				color: var(--mx-color-text-inverse);
			}
		}

		> .components-base-control:nth-last-child(1) {
			margin-bottom: 0;
		}
	}
}

// RTL Support - consolidated
body.rtl .toolbar-item__popover,
html[dir='rtl'] {
	.maxi-tabs-control__button {
		&:first-of-type input ~ label {
			border-radius: 0 5px 5px 0;
		}

		&:last-of-type input ~ label {
			border-radius: 5px 0 0 5px;
		}
	}

	.toolbar-item__more-settings {
		border-left: unset;
		border-right: var(--mx-border);
	}

	.toolbar-block-custom-label {
		right: 0;
		left: unset;
		border-radius: 0 var(--mx-radius) var(--mx-radius) 0;
	}

	.toolbar-more-indicator {
		right: unset;
		left: -16px;
		margin-right: var(--mx-spacing-md);
		margin-left: 0;
		border-radius: var(--mx-radius) 0 0 var(--mx-radius);
	}

	.breadcrumbs-pin {
		padding-right: 0;
		padding-left: var(--mx-spacing-md);
	}
}

// Firefox specific fixes
@-moz-document url-prefix() {
	.toolbar-item__popover {
		input[type='number'] {
			width: 5em;
		}
	}
}

// SVG button styles - optimized
.st0 {
	width: 100%;
	height: 100%;
	padding: 0;
	background-color: transparent;
	border-radius: 0;
	fill: var(--mx-color-text);
	transition: var(--mx-transition);
}

.components-button:hover .st0 {
	fill: var(--mx-color-primary);
}
