const breakpoints=["general","xxl","xl","l","m","s","xs"],relations=()=>{const t=(t,e)=>{let s={},n={};return Object.entries(t).forEach((([t,i])=>{breakpoints.includes(t)&&(window.innerWidth<i.breakpoint||!i.breakpoint)&&(s={...s,...i.styles},n={...n,...void 0!==e[`transition-duration-${t}`]&&{"transition-duration":e[`transition-duration-${t}`]},...void 0!==e[`transition-delay-${t}`]&&{"transition-delay":e[`transition-delay-${t}`]},...void 0!==e[`easing-${t}`]&&{easing:e[`easing-${t}`]},...void 0!==e[`transition-status-${t}`]&&{"transition-status":e[`transition-status-${t}`]}})})),{css:s,effectsObj:n}},e=(t,e,s=!1)=>{Object.entries(t).forEach((([t,n])=>{e.style[t]=s?"":n}))},s=t=>t["transition-status"]?`all ${t["transition-duration"]}s ${t["transition-delay"]}s ${t.easing}`:"all 0s 0s";maxiRelations[0]?.forEach((n=>{if(!n?.uniqueID)return;const i=document.querySelector(`.${n.trigger}`),a=document.querySelector(`.${n.uniqueID} ${n.target??""}`);let o;switch(n.action){case"hover":i.addEventListener("mouseenter",(()=>{clearTimeout(o);const{css:i,effectsObj:r}=t(n.css,n.effects);a.style.transition=s(r),e(i,a)})),i.addEventListener("mouseleave",(()=>{const{css:s}=t(n.css,n.effects);e(s,a,!0),o=setTimeout((()=>{a.style.transition=""}),1e3*n.effects["transition-duration-general"]+1e3)}));case"click":i.addEventListener("click",(()=>{const{css:i,effectsObj:o}=t(n.css,n.effects);a.style.transition=s(o),e(i,a)}))}}))};window.addEventListener("load",relations),window.addEventListener("resize",relations);
