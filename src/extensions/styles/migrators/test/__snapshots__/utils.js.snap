// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getBlockNameFromUniqueID Should return the block name 1`] = `"button-maxi"`;

exports[`getBlockNameFromUniqueID Should return the block name, when uniqueID is big digit 1`] = `"text-maxi"`;

exports[`getBlockSelectorsByUniqueID Should return accordion selectors 1`] = `
{
  "accordion": {
    "hover": {
      "label": "accordion on hover",
      "target": ".maxi-accordion-block:hover",
    },
    "normal": {
      "label": "accordion",
      "target": ".maxi-accordion-block",
    },
  },
  "after accordion": {
    "hover": {
      "label": "::after on hover",
      "target": ".maxi-accordion-block:hover::after",
    },
    "normal": {
      "label": "after",
      "target": ".maxi-accordion-block::after",
    },
  },
  "after content": {
    "active": {
      "label": "pane content ::after on active state",
      "target": ".maxi-pane-block[aria-expanded=true] .maxi-pane-block__content::after",
    },
    "hover": {
      "label": "pane content ::after on hover",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__content:hover::after",
    },
    "normal": {
      "label": "pane content ::after",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__content::after",
    },
  },
  "after header": {
    "active": {
      "label": "pane header ::after on active state",
      "target": ".maxi-pane-block[aria-expanded=true] .maxi-pane-block__header::after",
    },
    "hover": {
      "label": "pane header ::after on hover",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__header:hover::after",
    },
    "normal": {
      "label": "pane header ::after",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__header::after",
    },
  },
  "after header content": {
    "active": {
      "label": "pane header content::after on active state",
      "target": ".maxi-pane-block[aria-expanded=true] .maxi-pane-block__header-content::after",
    },
    "hover": {
      "label": "pane header content::after on hover",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__header-content:hover::after",
    },
    "normal": {
      "label": "pane header content::after",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__header-content::after",
    },
  },
  "after icon": {
    "active": {
      "label": "icon ::after on active state",
      "target": ".maxi-pane-block[aria-expanded=true] .maxi-pane-block__icon::after",
    },
    "hover": {
      "label": "icon ::after on hover",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__icon:hover::after",
    },
    "normal": {
      "label": "icon ::after",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__icon::after",
    },
  },
  "after pane": {
    "active": {
      "label": "pane ::after on active state",
      "target": " .maxi-pane-block[aria-expanded=true]::after",
    },
    "hover": {
      "label": "pane ::after on hover",
      "target": " .maxi-pane-block:hover::after",
    },
    "normal": {
      "label": "pane ::after",
      "target": " .maxi-pane-block::after",
    },
  },
  "before accordion": {
    "hover": {
      "label": "::before on hover",
      "target": ".maxi-accordion-block:hover::before",
    },
    "normal": {
      "label": "before",
      "target": ".maxi-accordion-block::before",
    },
  },
  "before content": {
    "active": {
      "label": "pane content ::before on active state",
      "target": ".maxi-pane-block[aria-expanded=true] .maxi-pane-block__content::before",
    },
    "hover": {
      "label": "pane content ::before on hover",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__content:hover::before",
    },
    "normal": {
      "label": "pane content ::before",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__content::before",
    },
  },
  "before header": {
    "active": {
      "label": "pane header ::before on active state",
      "target": ".maxi-pane-block[aria-expanded=true] .maxi-pane-block__header::before",
    },
    "hover": {
      "label": "pane header ::before on hover",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__header:hover::before",
    },
    "normal": {
      "label": "pane header ::before",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__header::before",
    },
  },
  "before header content": {
    "active": {
      "label": "pane header content::before on active state",
      "target": ".maxi-pane-block[aria-expanded=true] .maxi-pane-block__header-content::before",
    },
    "hover": {
      "label": "pane header content::before on hover",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__header-content:hover::before",
    },
    "normal": {
      "label": "pane header content::before",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__header-content::before",
    },
  },
  "before icon": {
    "active": {
      "label": "icon ::before on active state",
      "target": ".maxi-pane-block[aria-expanded=true] .maxi-pane-block__icon::before",
    },
    "hover": {
      "label": "icon ::before on hover",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__icon:hover::before",
    },
    "normal": {
      "label": "icon ::before",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__icon::before",
    },
  },
  "before pane": {
    "active": {
      "label": "pane ::before on active state",
      "target": " .maxi-pane-block[aria-expanded=true]::before",
    },
    "hover": {
      "label": "pane ::before on hover",
      "target": " .maxi-pane-block:hover::before",
    },
    "normal": {
      "label": "pane ::before",
      "target": " .maxi-pane-block::before",
    },
  },
  "pane": {
    "active": {
      "label": "pane on active state",
      "target": " .maxi-pane-block[aria-expanded=true]",
    },
    "hover": {
      "label": "pane on hover",
      "target": " .maxi-pane-block:hover",
    },
    "normal": {
      "label": "pane",
      "target": " .maxi-pane-block",
    },
  },
  "pane content": {
    "active": {
      "label": "pane content active state",
      "target": ".maxi-pane-block[aria-expanded=true] .maxi-pane-block__content",
    },
    "hover": {
      "label": "pane content on hover",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__content:hover",
    },
    "normal": {
      "label": "pane content",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__content",
    },
  },
  "pane content line": {
    "active": {
      "label": "content line on active state",
      "target": " .maxi-pane-block[aria-expanded=true] .maxi-pane-block__content-line",
    },
    "hover": {
      "label": "content line on hover",
      "target": " .maxi-pane-block[aria-expanded] .maxi-pane-block__content-line:hover",
    },
    "normal": {
      "label": "content line",
      "target": " .maxi-pane-block[aria-expanded] .maxi-pane-block__content-line",
    },
  },
  "pane header": {
    "active": {
      "label": "pane header on active state",
      "target": ".maxi-pane-block[aria-expanded=true] .maxi-pane-block__header",
    },
    "hover": {
      "label": "pane header on hover",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__header:hover",
    },
    "normal": {
      "label": "pane header",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__header",
    },
  },
  "pane header content": {
    "active": {
      "label": "header content on active state",
      "target": " .maxi-pane-block[aria-expanded=true] .maxi-pane-block__header-content",
    },
    "hover": {
      "label": "header content on hover",
      "target": " .maxi-pane-block[aria-expanded] .maxi-pane-block__header-content:hover",
    },
    "normal": {
      "label": "header content",
      "target": " .maxi-pane-block[aria-expanded] .maxi-pane-block__header-content",
    },
  },
  "pane header line": {
    "active": {
      "label": "header line on active state",
      "target": " .maxi-pane-block[aria-expanded=true] .maxi-pane-block__header-line",
    },
    "hover": {
      "label": "header line on hover",
      "target": " .maxi-pane-block[aria-expanded] .maxi-pane-block__header-line:hover",
    },
    "normal": {
      "label": "header line",
      "target": " .maxi-pane-block[aria-expanded] .maxi-pane-block__header-line",
    },
  },
  "pane icon": {
    "active": {
      "label": "active icon",
      "target": ".maxi-pane-block[aria-expanded=true] .maxi-pane-block__icon",
    },
    "activeInsideSvg": {
      "label": "everything inside active svg (svg > *)",
      "target": ".maxi-pane-block[aria-expanded=true] .maxi-pane-block__icon svg > *",
    },
    "activePath": {
      "label": "active svg's path",
      "target": ".maxi-pane-block[aria-expanded=true] .maxi-pane-block__icon svg path",
    },
    "activeSvg": {
      "label": "active icon's svg",
      "target": ".maxi-pane-block[aria-expanded=true] .maxi-pane-block__icon svg",
    },
    "hover": {
      "label": "icon on hover",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__icon:hover",
    },
    "hoverInsideSvg": {
      "label": "everything inside svg on hover (:hover svg > *)",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__icon:hover svg > *",
    },
    "hoverPath": {
      "label": "svg's path on hover",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__icon:hover svg path",
    },
    "hoverSvg": {
      "label": "icon's svg on hover",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__icon:hover svg",
    },
    "insideSvg": {
      "label": "everything inside svg (svg > *)",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__icon svg > *",
    },
    "normal": {
      "label": "icon",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__icon",
    },
    "path": {
      "label": "svg's path",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__icon svg path",
    },
    "svg": {
      "label": "icon's svg",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__icon svg",
    },
  },
}
`;

exports[`getBlockSelectorsByUniqueID Should return button selectors 1`] = `
{
  "after button": {
    "hover": {
      "label": "button ::after on hover",
      "target": " .maxi-button-block__button:hover::after",
    },
    "normal": {
      "label": "button ::after",
      "target": " .maxi-button-block__button::after",
    },
  },
  "after canvas": {
    "hover": {
      "label": "canvas ::after on hover",
      "target": ":hover::after",
    },
    "normal": {
      "label": "canvas ::after",
      "target": "::after",
    },
  },
  "after content": {
    "hover": {
      "label": "content ::after on hover",
      "target": " .maxi-button-block__content:hover::after",
    },
    "normal": {
      "label": "content ::after",
      "target": " .maxi-button-block__content::after",
    },
  },
  "after icon": {
    "hover": {
      "label": "icon ::after on hover",
      "target": " .maxi-button-block__icon:hover::after",
    },
    "normal": {
      "label": "icon ::after",
      "target": " .maxi-button-block__icon::after",
    },
  },
  "before button": {
    "hover": {
      "label": "button ::before on hover",
      "target": " .maxi-button-block__button:hover::before",
    },
    "normal": {
      "label": "button ::before",
      "target": " .maxi-button-block__button::before",
    },
  },
  "before canvas": {
    "hover": {
      "label": "canvas ::before on hover",
      "target": ":hover::before",
    },
    "normal": {
      "label": "canvas ::before",
      "target": "::before",
    },
  },
  "before content": {
    "hover": {
      "label": "content ::before on hover",
      "target": " .maxi-button-block__content:hover::before",
    },
    "normal": {
      "label": "content ::before",
      "target": " .maxi-button-block__content::before",
    },
  },
  "before icon": {
    "hover": {
      "label": "icon ::before on hover",
      "target": " .maxi-button-block__icon:hover::before",
    },
    "normal": {
      "label": "icon ::before",
      "target": " .maxi-button-block__icon::before",
    },
  },
  "button": {
    "hover": {
      "label": "button on hover",
      "target": " .maxi-button-block__button:hover",
    },
    "normal": {
      "label": "button",
      "target": " .maxi-button-block__button",
    },
  },
  "canvas": {
    "hover": {
      "label": "canvas on hover",
      "target": ":hover",
    },
    "normal": {
      "label": "canvas",
      "target": "",
    },
  },
  "content": {
    "hover": {
      "label": "content on hover",
      "target": " .maxi-button-block__content:hover",
    },
    "normal": {
      "label": "content",
      "target": " .maxi-button-block__content",
    },
  },
  "icon": {
    "hover": {
      "label": "icon on hover",
      "target": " .maxi-button-block__icon:hover",
    },
    "hoverInsideSvg": {
      "label": "everything inside svg on hover (:hover svg > *)",
      "target": " .maxi-button-block__icon:hover svg > *",
    },
    "hoverPath": {
      "label": "svg's path on hover",
      "target": " .maxi-button-block__icon:hover svg path",
    },
    "hoverSvg": {
      "label": "icon's svg on hover",
      "target": " .maxi-button-block__icon:hover svg",
    },
    "insideSvg": {
      "label": "everything inside svg (svg > *)",
      "target": " .maxi-button-block__icon svg > *",
    },
    "normal": {
      "label": "icon",
      "target": " .maxi-button-block__icon",
    },
    "path": {
      "label": "svg's path",
      "target": " .maxi-button-block__icon svg path",
    },
    "svg": {
      "label": "icon's svg",
      "target": " .maxi-button-block__icon svg",
    },
  },
}
`;

exports[`getBlockSelectorsByUniqueID Should return column selectors 1`] = `
{
  "after column": {
    "hover": {
      "label": "column ::after on hover",
      "target": ":hover::after",
    },
    "normal": {
      "label": "column ::after",
      "target": "::after",
    },
  },
  "before column": {
    "hover": {
      "label": "column ::before on hover",
      "target": ":hover::before",
    },
    "normal": {
      "label": "column ::before",
      "target": "::before",
    },
  },
  "column": {
    "hover": {
      "label": "column on hover",
      "target": ":hover",
    },
    "normal": {
      "label": "column",
      "target": "",
    },
  },
}
`;

exports[`getBlockSelectorsByUniqueID Should return container selectors 1`] = `
{
  "after container": {
    "hover": {
      "label": "container ::after on hover",
      "target": ":hover::after",
    },
    "normal": {
      "label": "container ::after",
      "target": "::after",
    },
  },
  "before container": {
    "hover": {
      "label": "container ::before on hover",
      "target": ":hover::before",
    },
    "normal": {
      "label": "container ::before",
      "target": "::before",
    },
  },
  "bottom shape divider": {
    "hover": {
      "label": "bottom shape divider on hover",
      "target": " .maxi-shape-divider__bottom:hover",
    },
    "normal": {
      "label": "bottom shape divider",
      "target": " .maxi-shape-divider__bottom",
    },
  },
  "container": {
    "hover": {
      "label": "container on hover",
      "target": ":hover",
    },
    "normal": {
      "label": "container",
      "target": "",
    },
  },
  "top shape divider": {
    "hover": {
      "label": "top shape divider on hover",
      "target": " .maxi-shape-divider__top:hover",
    },
    "normal": {
      "label": "top shape divider",
      "target": " .maxi-shape-divider__top",
    },
  },
}
`;

exports[`getBlockSelectorsByUniqueID Should return divider selectors 1`] = `
{
  "after canvas": {
    "hover": {
      "label": "canvas ::after on hover",
      "target": ":hover::after",
    },
    "normal": {
      "label": "canvas ::after",
      "target": "::after",
    },
  },
  "after divider": {
    "hover": {
      "label": "divider ::after on hover",
      "target": " .maxi-divider-block__divider:hover::after",
    },
    "normal": {
      "label": "divider ::after",
      "target": " .maxi-divider-block__divider::after",
    },
  },
  "before canvas": {
    "hover": {
      "label": "canvas ::before on hover",
      "target": ":hover::before",
    },
    "normal": {
      "label": "canvas ::before",
      "target": "::before",
    },
  },
  "before divider": {
    "hover": {
      "label": "divider ::before on hover",
      "target": " .maxi-divider-block__divider:hover::before",
    },
    "normal": {
      "label": "divider ::before",
      "target": " .maxi-divider-block__divider::before",
    },
  },
  "canvas": {
    "hover": {
      "label": "canvas on hover",
      "target": ":hover",
    },
    "normal": {
      "label": "canvas",
      "target": "",
    },
  },
  "divider": {
    "hover": {
      "label": "divider on hover",
      "target": " .maxi-divider-block__divider:hover",
    },
    "normal": {
      "label": "divider",
      "target": " .maxi-divider-block__divider",
    },
  },
}
`;

exports[`getBlockSelectorsByUniqueID Should return group selectors 1`] = `
{
  "after group": {
    "hover": {
      "label": "group ::after on hover",
      "target": ":hover::after",
    },
    "normal": {
      "label": "group ::after",
      "target": "::after",
    },
  },
  "before group": {
    "hover": {
      "label": "group ::before on hover",
      "target": ":hover::before",
    },
    "normal": {
      "label": "group ::before",
      "target": "::before",
    },
  },
  "group": {
    "hover": {
      "label": "group on hover",
      "target": ":hover",
    },
    "normal": {
      "label": "group",
      "target": "",
    },
  },
}
`;

exports[`getBlockSelectorsByUniqueID Should return image selectors 1`] = `
{
  "after canvas": {
    "hover": {
      "label": "canvas ::after on hover",
      "target": ":hover::after",
    },
    "normal": {
      "label": "canvas ::after",
      "target": "::after",
    },
  },
  "after image": {
    "hover": {
      "label": "image ::after on hover",
      "target": " .maxi-image-block__image:hover::after",
    },
    "normal": {
      "label": "image ::after",
      "target": " .maxi-image-block__image::after",
    },
  },
  "before canvas": {
    "hover": {
      "label": "canvas ::before on hover",
      "target": ":hover::before",
    },
    "normal": {
      "label": "canvas ::before",
      "target": "::before",
    },
  },
  "before image": {
    "hover": {
      "label": "image ::before on hover",
      "target": " .maxi-image-block__image:hover::before",
    },
    "normal": {
      "label": "image ::before",
      "target": " .maxi-image-block__image::before",
    },
  },
  "canvas": {
    "hover": {
      "label": "canvas on hover",
      "target": ":hover",
    },
    "normal": {
      "label": "canvas",
      "target": "",
    },
  },
  "image": {
    "hover": {
      "label": "image on hover",
      "target": " .maxi-image-block__image:hover",
    },
    "normal": {
      "label": "image",
      "target": " .maxi-image-block__image",
    },
  },
}
`;

exports[`getBlockSelectorsByUniqueID Should return map selectors 1`] = `
{
  "after description": {
    "hover": {
      "label": "description ::after on hover",
      "target": " .maxi-map-block__popup__content__description:hover::after",
    },
    "normal": {
      "label": "description ::after",
      "target": " .maxi-map-block__popup__content__description::after",
    },
  },
  "after map": {
    "hover": {
      "label": "map ::after on hover",
      "target": ":hover::after",
    },
    "normal": {
      "label": "map ::after",
      "target": "::after",
    },
  },
  "after popup": {
    "hover": {
      "label": "popup ::after on hover",
      "target": " .maxi-map-block__popup:hover::after",
    },
    "normal": {
      "label": "popup ::after",
      "target": " .maxi-map-block__popup::after",
    },
  },
  "after title": {
    "hover": {
      "label": "title ::after on hover",
      "target": " .maxi-map-block__popup__content__title:hover::after",
    },
    "normal": {
      "label": "title ::after",
      "target": " .maxi-map-block__popup__content__title::after",
    },
  },
  "before description": {
    "hover": {
      "label": "description ::before on hover",
      "target": " .maxi-map-block__popup__content__description:hover::before",
    },
    "normal": {
      "label": "description ::before",
      "target": " .maxi-map-block__popup__content__description::before",
    },
  },
  "before map": {
    "hover": {
      "label": "map ::before on hover",
      "target": ":hover::before",
    },
    "normal": {
      "label": "map ::before",
      "target": "::before",
    },
  },
  "before popup": {
    "hover": {
      "label": "popup ::before on hover",
      "target": " .maxi-map-block__popup:hover::before",
    },
    "normal": {
      "label": "popup ::before",
      "target": " .maxi-map-block__popup::before",
    },
  },
  "before title": {
    "hover": {
      "label": "title ::before on hover",
      "target": " .maxi-map-block__popup__content__title:hover::before",
    },
    "normal": {
      "label": "title ::before",
      "target": " .maxi-map-block__popup__content__title::before",
    },
  },
  "description": {
    "hover": {
      "label": "description on hover",
      "target": " .maxi-map-block__popup__content__description:hover",
    },
    "normal": {
      "label": "description",
      "target": " .maxi-map-block__popup__content__description",
    },
  },
  "map": {
    "hover": {
      "label": "map on hover",
      "target": ":hover",
    },
    "normal": {
      "label": "map",
      "target": "",
    },
  },
  "popup": {
    "hover": {
      "label": "popup on hover",
      "target": " .maxi-map-block__popup:hover",
    },
    "normal": {
      "label": "popup",
      "target": " .maxi-map-block__popup",
    },
  },
  "title": {
    "hover": {
      "label": "title on hover",
      "target": " .maxi-map-block__popup__content__title:hover",
    },
    "normal": {
      "label": "title",
      "target": " .maxi-map-block__popup__content__title",
    },
  },
}
`;

exports[`getBlockSelectorsByUniqueID Should return number-counter selectors 1`] = `
{
  "after canvas": {
    "hover": {
      "label": "canvas ::after on hover",
      "target": ":hover::after",
    },
    "normal": {
      "label": "canvas ::after",
      "target": "::after",
    },
  },
  "after number": {
    "hover": {
      "label": "number ::after on hover",
      "target": " .maxi-number-counter__box__text:hover::after",
    },
    "normal": {
      "label": "number ::after",
      "target": " .maxi-number-counter__box__text::after",
    },
  },
  "before canvas": {
    "hover": {
      "label": "canvas ::before on hover",
      "target": ":hover::before",
    },
    "normal": {
      "label": "canvas ::before",
      "target": "::before",
    },
  },
  "before number": {
    "hover": {
      "label": "number ::before on hover",
      "target": " .maxi-number-counter__box__text:hover::before",
    },
    "normal": {
      "label": "number ::before",
      "target": " .maxi-number-counter__box__text::before",
    },
  },
  "canvas": {
    "hover": {
      "label": "canvas on hover",
      "target": ":hover",
    },
    "normal": {
      "label": "canvas",
      "target": "",
    },
  },
  "circle": {
    "hover": {
      "label": "circle on hover",
      "target": " .maxi-number-counter__box__circle:hover",
    },
    "normal": {
      "label": "circle",
      "target": " .maxi-number-counter__box__circle",
    },
  },
  "number": {
    "hover": {
      "label": "number on hover",
      "target": " .maxi-number-counter__box__text:hover",
    },
    "normal": {
      "label": "number",
      "target": " .maxi-number-counter__box__text",
    },
  },
}
`;

exports[`getBlockSelectorsByUniqueID Should return pane selectors 1`] = `
{
  "after content": {
    "active": {
      "label": "pane content ::after on active state",
      "target": ".maxi-pane-block[aria-expanded=true].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__content::after",
    },
    "hover": {
      "label": "pane content ::after on hover",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__content:hover::after",
    },
    "normal": {
      "label": "pane content ::after",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__content::after",
    },
  },
  "after header": {
    "active": {
      "label": "pane header ::after on active state",
      "target": ".maxi-pane-block[aria-expanded=true].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__header::after",
    },
    "hover": {
      "label": "pane header ::after on hover",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__header:hover::after",
    },
    "normal": {
      "label": "pane header ::after",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__header::after",
    },
  },
  "after header content": {
    "active": {
      "label": "pane header content::after on active state",
      "target": ".maxi-pane-block[aria-expanded=true].maxi-block.wp-block-maxi-blocks-pane-maxi .maxi-pane-block__header .maxi-pane-block__header-content::after",
    },
    "hover": {
      "label": "pane header content::after on hover",
      "target": ".maxi-pane-block[aria-expanded].maxi-block.wp-block-maxi-blocks-pane-maxi .maxi-pane-block__header .maxi-pane-block__header-content:hover::after",
    },
    "normal": {
      "label": "accordion pane header content::after",
      "target": ".maxi-pane-block[aria-expanded].maxi-block.wp-block-maxi-blocks-pane-maxi .maxi-pane-block__header .maxi-pane-block__header-content::after",
    },
  },
  "after icon": {
    "active": {
      "label": "icon ::after on active state",
      "target": ".maxi-pane-block[aria-expanded=true].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__icon::after",
    },
    "hover": {
      "label": "icon ::after on hover",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__icon:hover::after",
    },
    "normal": {
      "label": "icon ::after",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__icon::after",
    },
  },
  "after pane": {
    "active": {
      "label": "pane ::after on active state",
      "target": ".maxi-pane-block[aria-expanded=true].wp-block-maxi-blocks-pane-maxi.maxi-block::after",
    },
    "hover": {
      "label": "pane ::after on hover",
      "target": ".wp-block-maxi-blocks-pane-maxi.maxi-pane-block[aria-expanded]:hover::after",
    },
    "normal": {
      "label": "pane ::after",
      "target": ".wp-block-maxi-blocks-pane-maxi.maxi-pane-block[aria-expanded]::after",
    },
  },
  "before content": {
    "active": {
      "label": "pane content ::before on active state",
      "target": ".maxi-pane-block[aria-expanded=true].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__content::before",
    },
    "hover": {
      "label": "pane content ::before on hover",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__content:hover::before",
    },
    "normal": {
      "label": "pane content ::before",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__content::before",
    },
  },
  "before header": {
    "active": {
      "label": "pane header ::before on active state",
      "target": ".maxi-pane-block[aria-expanded=true].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__header::before",
    },
    "hover": {
      "label": "pane header ::before on hover",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__header:hover::before",
    },
    "normal": {
      "label": "pane header ::before",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__header::before",
    },
  },
  "before header content": {
    "active": {
      "label": "accordion pane header content::before on active state",
      "target": ".maxi-pane-block[aria-expanded=true].maxi-block.wp-block-maxi-blocks-pane-maxi .maxi-pane-block__header .maxi-pane-block__header-content::before",
    },
    "hover": {
      "label": "accordion pane header content::before on hover",
      "target": ".maxi-pane-block[aria-expanded].maxi-block.wp-block-maxi-blocks-pane-maxi .maxi-pane-block__header .maxi-pane-block__header-content:hover::before",
    },
    "normal": {
      "label": "accordion pane header content::before",
      "target": ".maxi-pane-block[aria-expanded].maxi-block.wp-block-maxi-blocks-pane-maxi .maxi-pane-block__header .maxi-pane-block__header-content::before",
    },
  },
  "before icon": {
    "active": {
      "label": "icon ::before on active state",
      "target": ".maxi-pane-block[aria-expanded=true].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__icon::before",
    },
    "hover": {
      "label": "icon ::before on hover",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__icon:hover::before",
    },
    "normal": {
      "label": "icon ::before",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__icon::before",
    },
  },
  "before pane": {
    "active": {
      "label": "pane ::before on active state",
      "target": ".maxi-pane-block[aria-expanded=true].wp-block-maxi-blocks-pane-maxi.maxi-block::before",
    },
    "hover": {
      "label": "pane ::before on hover",
      "target": ".wp-block-maxi-blocks-pane-maxi.maxi-pane-block[aria-expanded]:hover::before",
    },
    "normal": {
      "label": "pane ::before",
      "target": ".wp-block-maxi-blocks-pane-maxi.maxi-pane-block[aria-expanded]::before",
    },
  },
  "content line": {
    "active": {
      "label": "content line on active state",
      "target": ".maxi-pane-block[aria-expanded=true] .maxi-pane-block__content-line",
    },
    "hover": {
      "label": "content line on hover",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__content-line:hover",
    },
    "normal": {
      "label": "content line",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__content-line",
    },
  },
  "header content": {
    "active": {
      "label": "header content on active state",
      "target": ".maxi-pane-block[aria-expanded=true] .maxi-pane-block__header-content",
    },
    "hover": {
      "label": "header content on hover",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__header-content:hover",
    },
    "normal": {
      "label": "header content",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__header-content",
    },
  },
  "header line": {
    "active": {
      "label": "header line on active state",
      "target": ".maxi-pane-block[aria-expanded=true] .maxi-pane-block__header-line",
    },
    "hover": {
      "label": "header line on hover",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__header-line:hover",
    },
    "normal": {
      "label": "header line",
      "target": ".maxi-pane-block[aria-expanded] .maxi-pane-block__header-line",
    },
  },
  "pane": {
    "active": {
      "label": "pane on active state",
      "target": ".maxi-block.maxi-pane-block[aria-expanded=true]",
    },
    "hover": {
      "label": "pane on hover",
      "target": ".maxi-block.maxi-pane-block[aria-expanded]:hover",
    },
    "normal": {
      "label": "pane",
      "target": ".maxi-pane-block[aria-expanded].maxi-block",
    },
  },
  "pane content": {
    "active": {
      "label": "pane content on active state",
      "target": ".maxi-pane-block[aria-expanded=true].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block  .maxi-pane-block__content",
    },
    "hover": {
      "label": "pane content on hover",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block  .maxi-pane-block__content:hover",
    },
    "normal": {
      "label": "pane content",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block  .maxi-pane-block__content",
    },
  },
  "pane header": {
    "active": {
      "label": "pane header on active state",
      "target": ".maxi-pane-block[aria-expanded=true].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__header",
    },
    "hover": {
      "label": "pane header on hover",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__header:hover",
    },
    "normal": {
      "label": "pane header",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block .maxi-pane-block__header",
    },
  },
  "pane icon": {
    "active": {
      "label": "active icon",
      "target": ".maxi-pane-block[aria-expanded=true].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block  .maxi-pane-block__icon",
    },
    "activeInsideSvg": {
      "label": "everything inside active svg (svg > *)",
      "target": ".maxi-pane-block[aria-expanded=true].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block  .maxi-pane-block__icon svg > *",
    },
    "activePath": {
      "label": "active svg's path",
      "target": ".maxi-pane-block[aria-expanded=true].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block  .maxi-pane-block__icon svg path",
    },
    "activeSvg": {
      "label": "active icon's svg",
      "target": ".maxi-pane-block[aria-expanded=true].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block  .maxi-pane-block__icon svg",
    },
    "hover": {
      "label": "icon on hover",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block  .maxi-pane-block__icon:hover",
    },
    "hoverInsideSvg": {
      "label": "everything inside svg on hover (:hover svg > *)",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block  .maxi-pane-block__icon:hover svg > *",
    },
    "hoverPath": {
      "label": "svg's path on hover",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block  .maxi-pane-block__icon:hover svg path",
    },
    "hoverSvg": {
      "label": "icon's svg on hover",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block  .maxi-pane-block__icon:hover svg",
    },
    "insideSvg": {
      "label": "everything inside svg (svg > *)",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block  .maxi-pane-block__icon svg > *",
    },
    "normal": {
      "label": "icon",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block  .maxi-pane-block__icon",
    },
    "path": {
      "label": "svg's path",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block  .maxi-pane-block__icon svg path",
    },
    "svg": {
      "label": "icon's svg",
      "target": ".maxi-pane-block[aria-expanded].wp-block-maxi-blocks-pane-maxi.maxi-block.maxi-pane-block  .maxi-pane-block__icon svg",
    },
  },
}
`;

exports[`getBlockSelectorsByUniqueID Should return row selectors 1`] = `
{
  "after row": {
    "hover": {
      "label": "row ::after on hover",
      "target": ":hover::after",
    },
    "normal": {
      "label": "row ::after",
      "target": "::after",
    },
  },
  "before row": {
    "hover": {
      "label": "row ::before on hover",
      "target": ":hover::before",
    },
    "normal": {
      "label": "row ::before",
      "target": "::before",
    },
  },
  "row": {
    "hover": {
      "label": "row on hover",
      "target": ":hover",
    },
    "normal": {
      "label": "row",
      "target": "",
    },
  },
}
`;

exports[`getBlockSelectorsByUniqueID Should return search selectors 1`] = `
{
  "after block": {
    "hover": {
      "label": "block ::after on hover",
      "target": ":hover::after",
    },
    "normal": {
      "label": "block ::after",
      "target": "::after",
    },
  },
  "after button": {
    "hover": {
      "label": "button ::after on hover",
      "target": " .maxi-search-block__button:hover::after",
    },
    "normal": {
      "label": "button ::after",
      "target": " .maxi-search-block__button::after",
    },
  },
  "after input": {
    "hover": {
      "label": "input ::after on hover",
      "target": " .maxi-search-block__input:hover::after",
    },
    "normal": {
      "label": "input ::after",
      "target": " .maxi-search-block__input::after",
    },
  },
  "before block": {
    "hover": {
      "label": "block ::before on hover",
      "target": ":hover::before",
    },
    "normal": {
      "label": "block ::before",
      "target": "::before",
    },
  },
  "before button": {
    "hover": {
      "label": "button ::before on hover",
      "target": " .maxi-search-block__button:hover::before",
    },
    "normal": {
      "label": "button ::before",
      "target": " .maxi-search-block__button::before",
    },
  },
  "before input": {
    "hover": {
      "label": "input ::before on hover",
      "target": " .maxi-search-block__input:hover::before",
    },
    "normal": {
      "label": "input ::before",
      "target": " .maxi-search-block__input::before",
    },
  },
  "block": {
    "hover": {
      "label": "block on hover",
      "target": ":hover",
    },
    "normal": {
      "label": "block",
      "target": "",
    },
  },
  "button": {
    "hover": {
      "label": "button on hover",
      "target": " .maxi-search-block__button:hover",
    },
    "normal": {
      "label": "button",
      "target": " .maxi-search-block__button",
    },
  },
  "close icon": {
    "hover": {
      "label": "icon on hover",
      "target": " .maxi-search-block__button__close-icon:hover",
    },
    "hoverInsideSvg": {
      "label": "everything inside svg on hover (:hover svg > *)",
      "target": " .maxi-search-block__button__close-icon:hover svg > *",
    },
    "hoverPath": {
      "label": "svg's path on hover",
      "target": " .maxi-search-block__button__close-icon:hover svg path",
    },
    "hoverSvg": {
      "label": "icon's svg on hover",
      "target": " .maxi-search-block__button__close-icon:hover svg",
    },
    "insideSvg": {
      "label": "everything inside svg (svg > *)",
      "target": " .maxi-search-block__button__close-icon svg > *",
    },
    "normal": {
      "label": "icon",
      "target": " .maxi-search-block__button__close-icon",
    },
    "path": {
      "label": "svg's path",
      "target": " .maxi-search-block__button__close-icon svg path",
    },
    "svg": {
      "label": "icon's svg",
      "target": " .maxi-search-block__button__close-icon svg",
    },
  },
  "icon": {
    "hover": {
      "label": "icon on hover",
      "target": " .maxi-search-block__button__default-icon:hover",
    },
    "hoverInsideSvg": {
      "label": "everything inside svg on hover (:hover svg > *)",
      "target": " .maxi-search-block__button__default-icon:hover svg > *",
    },
    "hoverPath": {
      "label": "svg's path on hover",
      "target": " .maxi-search-block__button__default-icon:hover svg path",
    },
    "hoverSvg": {
      "label": "icon's svg on hover",
      "target": " .maxi-search-block__button__default-icon:hover svg",
    },
    "insideSvg": {
      "label": "everything inside svg (svg > *)",
      "target": " .maxi-search-block__button__default-icon svg > *",
    },
    "normal": {
      "label": "icon",
      "target": " .maxi-search-block__button__default-icon",
    },
    "path": {
      "label": "svg's path",
      "target": " .maxi-search-block__button__default-icon svg path",
    },
    "svg": {
      "label": "icon's svg",
      "target": " .maxi-search-block__button__default-icon svg",
    },
  },
  "input": {
    "hover": {
      "label": "input on hover",
      "target": " .maxi-search-block__input:hover",
    },
    "normal": {
      "label": "input",
      "target": " .maxi-search-block__input",
    },
  },
  "placeholder input": {
    "hover": {
      "label": "input ::placeholder on hover",
      "target": " .maxi-search-block__input:hover::placeholder",
    },
    "normal": {
      "label": "input ::placeholder",
      "target": " .maxi-search-block__input::placeholder",
    },
  },
}
`;

exports[`getBlockSelectorsByUniqueID Should return svg-icon selectors 1`] = `
{
  "after canvas": {
    "hover": {
      "label": "canvas ::after on hover",
      "target": ":hover::after",
    },
    "normal": {
      "label": "canvas ::after",
      "target": "::after",
    },
  },
  "before canvas": {
    "hover": {
      "label": "canvas ::before on hover",
      "target": ":hover::before",
    },
    "normal": {
      "label": "canvas ::before",
      "target": "::before",
    },
  },
  "canvas": {
    "hover": {
      "label": "canvas on hover",
      "target": ":hover",
    },
    "normal": {
      "label": "canvas",
      "target": "",
    },
  },
  "svg": {
    "hover": {
      "label": "svg on hover",
      "target": " .maxi-svg-icon-block__icon svg:hover",
    },
    "normal": {
      "label": "svg",
      "target": " .maxi-svg-icon-block__icon svg",
    },
  },
}
`;

exports[`getBlockSelectorsByUniqueID Should return text selectors 1`] = `
{
  "after text": {
    "hover": {
      "label": "text ::after on hover",
      "target": " .maxi-text-block__content:hover::after",
    },
    "normal": {
      "label": "text ::after",
      "target": " .maxi-text-block__content::after",
    },
  },
  "before text": {
    "hover": {
      "label": "text ::before on hover",
      "target": " .maxi-text-block__content:hover::before",
    },
    "normal": {
      "label": "text ::before",
      "target": " .maxi-text-block__content::before",
    },
  },
  "links": {
    "hover": {
      "label": "links on hover",
      "target": " .maxi-text-block--link:hover",
    },
    "normal": {
      "label": "links",
      "target": " .maxi-text-block--link",
    },
  },
  "ordered list": {
    "hover": {
      "label": "ordered list on hover",
      "target": " ol.maxi-text-block__content:hover",
    },
    "normal": {
      "label": "ordered list",
      "target": " ol.maxi-text-block__content",
    },
  },
  "text": {
    "hover": {
      "label": "text on hover",
      "target": " .maxi-text-block__content:hover",
    },
    "normal": {
      "label": "text",
      "target": " .maxi-text-block__content",
    },
  },
  "text wrapper": {
    "hover": {
      "label": "text wrapper on hover",
      "target": ":hover",
    },
    "normal": {
      "label": "text wrapper",
      "target": "",
    },
  },
  "unordered list": {
    "hover": {
      "label": "unordered list on hover",
      "target": " ul.maxi-text-block__content:hover",
    },
    "normal": {
      "label": "unordered list",
      "target": " ul.maxi-text-block__content",
    },
  },
}
`;

exports[`getBlockSelectorsByUniqueID Should return video selectors 1`] = `
{
  "after canvas": {
    "hover": {
      "label": "canvas ::after on hover",
      "target": ":hover::after",
    },
    "normal": {
      "label": "canvas ::after",
      "target": "::after",
    },
  },
  "after overlay": {
    "hover": {
      "label": "overlay ::after on hover",
      "target": " .maxi-video-block__overlay:hover::after",
    },
    "normal": {
      "label": "overlay ::after",
      "target": " .maxi-video-block__overlay::after",
    },
  },
  "after video": {
    "hover": {
      "label": "video ::after on hover",
      "target": " .maxi-video-block__video-player:hover::after",
    },
    "normal": {
      "label": "video ::after",
      "target": " .maxi-video-block__video-player::after",
    },
  },
  "before canvas": {
    "hover": {
      "label": "canvas ::before on hover",
      "target": ":hover::before",
    },
    "normal": {
      "label": "canvas ::before",
      "target": "::before",
    },
  },
  "before overlay": {
    "hover": {
      "label": "overlay ::before on hover",
      "target": " .maxi-video-block__overlay:hover::before",
    },
    "normal": {
      "label": "overlay ::before",
      "target": " .maxi-video-block__overlay::before",
    },
  },
  "before video": {
    "hover": {
      "label": "video ::before on hover",
      "target": " .maxi-video-block__video-player:hover::before",
    },
    "normal": {
      "label": "video ::before",
      "target": " .maxi-video-block__video-player::before",
    },
  },
  "canvas": {
    "hover": {
      "label": "canvas on hover",
      "target": ":hover",
    },
    "normal": {
      "label": "canvas",
      "target": "",
    },
  },
  "close icon": {
    "hover": {
      "label": "close icon on hover",
      "target": " .maxi-video-block__close-button:hover",
    },
    "hoverInsideSvg": {
      "label": "everything inside svg on hover (:hover svg > *)",
      "target": " .maxi-video-block__close-button:hover svg > *",
    },
    "hoverPath": {
      "label": "svg's path on hover",
      "target": " .maxi-video-block__close-button:hover svg path",
    },
    "hoverSvg": {
      "label": "close icon's svg on hover",
      "target": " .maxi-video-block__close-button:hover svg",
    },
    "insideSvg": {
      "label": "everything inside svg (svg > *)",
      "target": " .maxi-video-block__close-button svg > *",
    },
    "normal": {
      "label": "close icon",
      "target": " .maxi-video-block__close-button",
    },
    "path": {
      "label": "svg's path",
      "target": " .maxi-video-block__close-button svg path",
    },
    "svg": {
      "label": "close icon's svg",
      "target": " .maxi-video-block__close-button svg",
    },
  },
  "overlay": {
    "hover": {
      "label": "overlay on hover",
      "target": " .maxi-video-block__overlay:hover",
    },
    "normal": {
      "label": "overlay",
      "target": " .maxi-video-block__overlay",
    },
  },
  "play icon": {
    "hover": {
      "label": "play icon on hover",
      "target": " .maxi-video-block__play-button:hover",
    },
    "hoverInsideSvg": {
      "label": "everything inside svg on hover (:hover svg > *)",
      "target": " .maxi-video-block__play-button:hover svg > *",
    },
    "hoverPath": {
      "label": "svg's path on hover",
      "target": " .maxi-video-block__play-button:hover svg path",
    },
    "hoverSvg": {
      "label": "play icon's svg on hover",
      "target": " .maxi-video-block__play-button:hover svg",
    },
    "insideSvg": {
      "label": "everything inside svg (svg > *)",
      "target": " .maxi-video-block__play-button svg > *",
    },
    "normal": {
      "label": "play icon",
      "target": " .maxi-video-block__play-button",
    },
    "path": {
      "label": "svg's path",
      "target": " .maxi-video-block__play-button svg path",
    },
    "svg": {
      "label": "play icon's svg",
      "target": " .maxi-video-block__play-button svg",
    },
  },
  "video": {
    "hover": {
      "label": "video on hover",
      "target": " .maxi-video-block__video-player:hover",
    },
    "normal": {
      "label": "video",
      "target": " .maxi-video-block__video-player",
    },
  },
}
`;

exports[`getIBDataItem Should return the IB setting 1`] = `
{
  "attrGroupName": "boxShadow",
  "component": [Function],
  "forceTempPalette": [Function],
  "forceTempPalettePrefix": "box-shadow-",
  "helper": [Function],
  "hoverProp": "box-shadow-status-hover",
  "label": "Box shadow",
  "relatedAttributes": [
    "box-shadow-inset",
    "box-shadow-horizontal",
    "box-shadow-horizontal-unit",
    "box-shadow-vertical",
    "box-shadow-vertical-unit",
    "box-shadow-blur",
    "box-shadow-blur-unit",
    "box-shadow-spread",
    "box-shadow-spread-unit",
  ],
  "sid": "bs",
}
`;

exports[`getIBDataItem Should return the IB setting, which has transitionTarget 1`] = `
{
  "attrGroupName": [
    "icon",
    "iconBackground",
    "iconBackgroundGradient",
    "iconBackgroundColor",
    "iconBorder",
    "iconBorderWidth",
    "iconBorderRadius",
    "iconPadding",
    "typography",
  ],
  "component": [Function],
  "helper": [Function],
  "hoverProp": "icon-status-hover",
  "label": "Button icon",
  "sid": "bi",
  "styleAttrs": [
    "icon-content",
    "icon-background-active-media",
  ],
  "transitionTarget": [
    "  .maxi-button-block__icon svg > *:not(g)",
    " .maxi-button-block__icon svg",
    " .maxi-button-block__icon",
    " .maxi-button-block__icon",
  ],
}
`;

exports[`getIBDataItem Should support sid 1`] = `
{
  "attrGroupName": [
    "icon",
    "iconBackground",
    "iconBackgroundGradient",
    "iconBackgroundColor",
    "iconBorder",
    "iconBorderWidth",
    "iconBorderRadius",
    "iconPadding",
    "typography",
  ],
  "component": [Function],
  "helper": [Function],
  "hoverProp": "icon-status-hover",
  "label": "Button icon",
  "sid": "bi",
  "styleAttrs": [
    "icon-content",
    "icon-background-active-media",
  ],
  "transitionTarget": [
    "  .maxi-button-block__icon svg > *:not(g)",
    " .maxi-button-block__icon svg",
    " .maxi-button-block__icon",
    " .maxi-button-block__icon",
  ],
}
`;

exports[`handleBlockMigrator Should return a one element array 1`] = `
[
  "<p class="test-migrators new-class" data-align="full">Modified content</p>",
  "<p class="test-migrators new-class" data-align="full">test</p>",
  "<p class="test-migrators new-class">Modified content</p>",
  "<p class="test-migrators" data-align="full">Modified content</p>",
  "<h1 class="test-migrators new-class" data-align="full">Modified content</h1>",
  "<p class="test-migrators new-class">test</p>",
  "<p class="test-migrators" data-align="full">test</p>",
  "<h1 class="test-migrators new-class" data-align="full">test</h1>",
  "<p class="test-migrators">Modified content</p>",
  "<h1 class="test-migrators new-class">Modified content</h1>",
  "<h1 class="test-migrators" data-align="full">Modified content</h1>",
  "<p class="test-migrators">test</p>",
  "<h1 class="test-migrators new-class">test</h1>",
  "<h1 class="test-migrators" data-align="full">test</h1>",
  "<h1 class="test-migrators">Modified content</h1>",
]
`;
