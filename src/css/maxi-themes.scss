/**
* Default and variables
*/
$styles: 'dark', 'light';
$levels: 'p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6';
$responsive_sizes: 'xxl', 'xl', 'l', 'm', 's', 'xs';
$responsive_breakpoints: 1921, 1920, 1366, 1024, 768, 480;
$responsive_width: '';
$current_responsive_stage: 'general';
$color_set: '1', '2', '3', '4', '5', '6', '7', '8';

/**
* Styles
*/

/* Frontend */
body.maxi-blocks--active {
	.edit-post-visual-editor,
	.edit-site-visual-editor {
		@each $style in $styles {
			/* Color Presets */
			.maxi-#{$style} {
				/* Color Presets */
				@each $color_number in $color_set {
					&.maxi-sc-#{$style}-link-color-#{$color_number},
					.maxi-sc-#{$style}-link-color-#{$color_number} {
						&.maxi-block--has-link {
							--maxi-#{$style}-link-palette: var(
								--maxi-#{$style}-color-#{$color_number}
							);
						}
						a.maxi-text-block--link {
							--maxi-#{$style}-link-palette: var(
								--maxi-#{$style}-color-#{$color_number}
							);
						}
					}
					&.maxi-sc-#{$style}-link-hover-color-#{$color_number},
					.maxi-sc-#{$style}-link-hover-color-#{$color_number} {
						&.maxi-block--has-link {
							--maxi-#{$style}-link-hover-palette: var(
								--maxi-#{$style}-color-#{$color_number}
							);
						}
						a.maxi-text-block--link {
							--maxi-#{$style}-link-hover-palette: var(
								--maxi-#{$style}-color-#{$color_number}
							);
						}
					}
					&.maxi-sc-#{$style}-link-active-color-#{$color_number},
					.maxi-sc-#{$style}-link-active-color-#{$color_number} {
						&.maxi-block--has-link {
							--maxi-#{$style}-link-active-palette: var(
								--maxi-#{$style}-color-#{$color_number}
							);
						}
						a.maxi-text-block--link {
							--maxi-#{$style}-link-active-palette: var(
								--maxi-#{$style}-color-#{$color_number}
							);
						}
					}
					&.maxi-sc-#{$style}-link-visited-color-#{$color_number},
					.maxi-sc-#{$style}-link-visited-color-#{$color_number} {
						&.maxi-block--has-link {
							--maxi-#{$style}-link-visited-palette: var(
								--maxi-#{$style}-color-#{$color_number}
							);
						}
						a.maxi-text-block--link {
							--maxi-#{$style}-link-visited-palette: var(
								--maxi-#{$style}-color-#{$color_number}
							);
						}
					}
				}
			}

			/* Individual settings per a block type */
			.maxi-#{$style}.maxi-block {
				&.maxi-text-block,
				.maxi-text-block,
				&.maxi-image-block figcaption,
				.maxi-image-block figcaption {
					@each $level in $levels {
						#{$level} {
							font-family: var(
								--maxi-#{$style}-#{$level}-font-family-general
							);
							font-weight: var(
								--maxi-#{$style}-#{$level}-font-weight-general
							);
							font-style: var(
								--maxi-#{$style}-#{$level}-font-style-general
							);
							text-transform: var(
								--maxi-#{$style}-#{$level}-text-transform-general
							);
							text-decoration: var(
								--maxi-#{$style}-#{$level}-text-decoration-general
							);
						}
					}
				}

				&.maxi-text-block li,
				.maxi-text-block li {
					font-family: var(--maxi-#{$style}-p-font-family-general);
					font-weight: var(--maxi-#{$style}-p-font-weight-general);
					font-style: var(--maxi-#{$style}-p-font-style-general);
					text-transform: var(
						--maxi-#{$style}-p-text-transform-general
					);
					text-decoration: var(
						--maxi-#{$style}-p-text-decoration-general
					);
				}

				&.maxi-block--has-link .maxi-text-block__content {
					color: var(--maxi-#{$style}-link);
					&:hover,
					&:focus {
						color: var(--maxi-#{$style}-link-hover);
					}
					&:active {
						color: var(--maxi-#{$style}-link-active);
					}
					&:visited {
						color: var(--maxi-#{$style}-link-visited);
					}
				}

				&.maxi-text-block a.maxi-text-block--link,
				.maxi-text-block a.maxi-text-block--link {
					color: var(--maxi-#{$style}-link);
					&:hover,
					&:focus {
						color: var(--maxi-#{$style}-link-hover);
						span {
							color: var(--maxi-#{$style}-link-hover);
						}
					}
					&:active {
						color: var(--maxi-#{$style}-link-active);
						span {
							color: var(--maxi-#{$style}-link-active);
						}
					}
					&:visited {
						color: var(--maxi-#{$style}-link-visited);
						span {
							color: var(--maxi-#{$style}-link-visited);
						}
					}
				}

				&.maxi-button-block .maxi-button-block__content,
				.maxi-button-block .maxi-button-block__content {
					font-family: var(
						--maxi-#{$style}-button-font-family-general,
						var(--maxi-#{$style}-p-font-family-general)
					);
					font-weight: var(
						--maxi-#{$style}-button-font-weight-general
					);
					font-style: var(--maxi-#{$style}-button-font-style-general);
					text-transform: var(
						--maxi-#{$style}-button-text-transform-general
					);
					text-decoration: var(
						--maxi-#{$style}-button-text-decoration-general
					);
				}

				&.maxi-image-block .maxi-hover-details,
				.maxi-image-block .maxi-hover-details {
					h4 {
						font-family: var(
							--maxi-#{$style}-h4-font-family-general
						);
						font-weight: var(
							--maxi-#{$style}-h4-font-weight-general
						);
						font-style: var(--maxi-#{$style}-h4-font-style-general);
						text-transform: var(
							--maxi-#{$style}-h4-text-transform-general
						);
						text-decoration: var(
							--maxi-#{$style}-h4-text-decoration-general
						);
					}

					p {
						font-family: var(
							--maxi-#{$style}-p-font-family-general
						);
						font-weight: var(
							--maxi-#{$style}-p-font-weight-general
						);
						font-style: var(--maxi-#{$style}-p-font-style-general);
						text-transform: var(
							--maxi-#{$style}-p-text-transform-general
						);
						text-decoration: var(
							--maxi-#{$style}-p-text-decoration-general
						);
					}
				}
			}

			&.maxi-search-block,
			.maxi-search-block {
				&__input,
				&__button__content {
					font-family: var(--maxi-#{$style}-p-font-family-general);
					font-size: var(--maxi-#{$style}-p-font-size-general);
					line-height: var(--maxi-#{$style}-p-line-height-general);
					font-weight: var(--maxi-#{$style}-p-font-weight-general);
					font-style: var(--maxi-#{$style}-p-font-style-general);
					text-transform: var(
						--maxi-#{$style}-p-text-transform-general
					);
					text-decoration: var(
						--maxi-#{$style}-p-text-decoration-general
					);
				}
			}
		}
	}
}

/**
* Backend
*/
body.maxi-blocks--active {
	@each $style in $styles {
		/* Palette */
		div#editor .maxi-color-palette--#{$style},
		div#site-editor .maxi-color-palette--#{$style} {
			@each $color_number in $color_set {
				.maxi-color-control__palette
					.maxi-color-control__palette-box
					.maxi-color-control__palette-item__#{$color_number} {
					background-color: rgba(
						var(--maxi-#{$style}-color-#{$color_number}),
						1
					);
				}
			}
		}
	}
}

@mixin style-card-styles($breakpoint, $is_backend) {
	@each $style in $styles {
		$class_name: '.maxi-#{$style}';

		@if ($is_backend) {
			$class_name: '.maxi-#{$style}.maxi-block--backend';
		} @else {
			$class_name: '.maxi-#{$style}:not(.maxi-block--backend)';
		}

		#{$class_name} {
			&.maxi-text-block,
			.maxi-text-block {
				@each $level in $levels {
					#{$level} {
						font-family: var(
							--maxi-#{$style}-#{$level}-font-family-#{$breakpoint}
						);
						font-size: var(
							--maxi-#{$style}-#{$level}-font-size-#{$breakpoint}
						);
						line-height: var(
							--maxi-#{$style}-#{$level}-line-height-#{$breakpoint}
						);
						letter-spacing: var(
							--maxi-#{$style}-#{$level}-letter-spacing-#{$breakpoint}
						);
						font-weight: var(
							--maxi-#{$style}-#{$level}-font-weight-#{$breakpoint}
						);
						text-transform: var(
							--maxi-#{$style}-#{$level}-text-transform-#{$breakpoint}
						);
						font-style: var(
							--maxi-#{$style}-#{$level}-font-style-#{$breakpoint}
						);
						text-decoration: var(
							--maxi-#{$style}-#{$level}-text-decoration-#{$breakpoint}
						);
					}
				}
			}

			&.maxi-text-block li,
			.maxi-text-block li {
				font-family: var(--maxi-#{$style}-p-font-family-#{$breakpoint});
				font-size: var(--maxi-#{$style}-p-font-size-#{$breakpoint});
				line-height: var(--maxi-#{$style}-p-line-height-#{$breakpoint});
				letter-spacing: var(
					--maxi-#{$style}-p-letter-spacing-#{$breakpoint}
				);
			}

			.maxi-button-block__content {
				font-family: var(
					--maxi-#{$style}-button-font-family-#{$breakpoint}
				);
				font-size: var(
					--maxi-#{$style}-button-font-size-#{$breakpoint}
				);
				line-height: var(
					--maxi-#{$style}-button-line-height-#{$breakpoint}
				);
				letter-spacing: var(
					--maxi-#{$style}-button-letter-spacing-#{$breakpoint}
				);
				font-weight: var(
					--maxi-#{$style}-button-font-weight-#{$breakpoint}
				);
				text-transform: var(
					--maxi-#{$style}-button-text-transform-#{$breakpoint}
				);
				font-style: var(
					--maxi-#{$style}-button-font-style-#{$breakpoint}
				);
				text-decoration: var(
					--maxi-#{$style}-button-text-decoration-#{$breakpoint}
				);
			}

			&.maxi-image-block,
			.maxi-image-block {
				figcaption {
					font-family: var(
						--maxi-#{$style}-p-font-family-#{$breakpoint}
					);
					font-size: var(--maxi-#{$style}-p-font-size-#{$breakpoint});
					line-height: var(
						--maxi-#{$style}-p-line-height-#{$breakpoint}
					);
					letter-spacing: var(
						--maxi-#{$style}-p-letter-spacing-#{$breakpoint}
					);
					font-weight: var(
						--maxi-#{$style}-p-font-weight-#{$breakpoint}
					);
					text-transform: var(
						--maxi-#{$style}-p-text-transform-#{$breakpoint}
					);
					font-style: var(
						--maxi-#{$style}-p-font-style-#{$breakpoint}
					);
					text-decoration: var(
						--maxi-#{$style}-p-text-decoration-#{$breakpoint}
					);
				}

				.maxi-hover-details {
					h4 {
						font-family: var(
							--maxi-#{$style}-h4-font-family-#{$breakpoint}
						);
						font-size: var(
							--maxi-#{$style}-h4-font-size-#{$breakpoint}
						);
						line-height: var(
							--maxi-#{$style}-h4-line-height-#{$breakpoint}
						);
						letter-spacing: var(
							--maxi-#{$style}-h4-letter-spacing-#{$breakpoint}
						);
						font-weight: var(
							--maxi-#{$style}-h4-font-weight-#{$breakpoint}
						);
						text-transform: var(
							--maxi-#{$style}-h4-text-transform-#{$breakpoint}
						);
						font-style: var(
							--maxi-#{$style}-h4-font-style-#{$breakpoint}
						);
						text-decoration: var(
							--maxi-#{$style}-h4-text-decoration-#{$breakpoint}
						);
					}

					p {
						font-family: var(
							--maxi-#{$style}-p-font-family-#{$breakpoint}
						);
						font-size: var(
							--maxi-#{$style}-p-font-size-#{$breakpoint}
						);
						line-height: var(
							--maxi-#{$style}-p-line-height-#{$breakpoint}
						);
						letter-spacing: var(
							--maxi-#{$style}-p-letter-spacing-#{$breakpoint}
						);
						font-weight: var(
							--maxi-#{$style}-p-font-weight-#{$breakpoint}
						);
						text-transform: var(
							--maxi-#{$style}-p-text-transform-#{$breakpoint}
						);
						font-style: var(
							--maxi-#{$style}-p-font-style-#{$breakpoint}
						);
						text-decoration: var(
							--maxi-#{$style}-p-text-decoration-#{$breakpoint}
						);
					}
				}
			}

			&.maxi-search-block,
			.maxi-search-block {
				&__input,
				&__button__content {
					font-family: var(
						--maxi-#{$style}-p-font-family-#{$breakpoint}
					);
					font-size: var(--maxi-#{$style}-p-font-size-#{$breakpoint});
					line-height: var(
						--maxi-#{$style}-p-line-height-#{$breakpoint}
					);
					letter-spacing: var(
						--maxi-#{$style}-p-letter-spacing-#{$breakpoint}
					);
					font-weight: var(
						--maxi-#{$style}-p-font-weight-#{$breakpoint}
					);
					text-transform: var(
						--maxi-#{$style}-p-text-transform-#{$breakpoint}
					);
					font-style: var(
						--maxi-#{$style}-p-font-style-#{$breakpoint}
					);
					text-decoration: var(
						--maxi-#{$style}-p-text-decoration-#{$breakpoint}
					);
				}
			}
		}
	}
}

@each $responsive_size in $responsive_sizes {
	$current_responsive_attribute: '[maxi-blocks-responsive=#{$responsive_size}]';

	@if ($responsive_size != 'general') {
		body.maxi-blocks--active {
			.edit-post-visual-editor#{$current_responsive_attribute},
			&.editor-styles-wrapper#{$current_responsive_attribute} {
				@include style-card-styles($responsive_size, true);
			}
		}
	}
}

@each $responsive_breakpoint in $responsive_breakpoints {
	@if $responsive_breakpoint == 480 {
		$responsive_width: max-width;
		$current_responsive_stage: 'xs';
	}
	@if $responsive_breakpoint == 768 {
		$responsive_width: max-width;
		$current_responsive_stage: 's';
	}
	@if $responsive_breakpoint == 1024 {
		$responsive_width: max-width;
		$current_responsive_stage: 'm';
	}
	@if $responsive_breakpoint == 1366 {
		$responsive_width: max-width;
		$current_responsive_stage: 'l';
	}
	@if $responsive_breakpoint == 1920 {
		$responsive_width: max-width;
		$current_responsive_stage: 'xl';
	}
	@if $responsive_breakpoint == 1921 {
		$responsive_width: min-width;
		$current_responsive_stage: 'xxl';
	}

	@media only screen and ($responsive_width: #{$responsive_breakpoint}px) {
		body.maxi-blocks--active {
			@include style-card-styles($current_responsive_stage, false);
		}
	}
}
