// Higher specificity to override legacy styles
.maxi-reset-button,
.maxi-components-button.maxi-reset-button,
button.maxi-components-button.maxi-reset-button {
	// CSS custom properties for easy theming
	--reset-size: 22px;
	--reset-icon-size: 12px;
	--reset-border-width: 1px;
	--reset-z-index: 20;

	// Base unified styles
	display: flex !important;
	align-items: center !important;
	justify-content: center !important;
	width: var(--reset-size) !important;
	height: var(--reset-size) !important;
	min-width: var(--reset-size) !important;
	max-width: var(--reset-size) !important;
	min-height: var(--reset-size) !important;
	max-height: var(--reset-size) !important;
	padding: 0 !important;
	margin: 0 !important;
	background: var(--maxi-white) !important;
	border: var(--reset-border-width) solid var(--maxi-grey-light) !important;
	border-radius: 50% !important;
	cursor: pointer !important;
	transition: all 0.2s ease !important;
	box-sizing: border-box !important;
	box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1) !important;
	-webkit-appearance: none !important;
	appearance: none !important;
	text-decoration: none !important;
	opacity: 1 !important;

	&:focus {
		border-color: var(--maxi-grey) !important;
		outline: none !important;
	}

	svg {
		width: var(--reset-icon-size) !important;
		height: var(--reset-icon-size) !important;
		margin: auto !important;
		fill: var(--maxi-grey) !important;
		transition: fill 0.2s ease !important;
		display: block !important;
	}

	&:hover {
		background: var(--maxi-mid-green) !important;
		border-color: var(--maxi-mid-green) !important;

		svg {
			fill: var(--maxi-primary-color) !important;
		}
	}

	// Positioning variants
	&--inline {
		position: relative !important;
		margin-left: 8px !important;
	}

	&--absolute {
		position: absolute !important;
		right: -12px !important;
		top: -12px !important;
		z-index: var(--reset-z-index) !important;
	}

	// Size variants
	&--large {
		--reset-size: 32px !important;
		--reset-icon-size: 16px !important;
	}

	&--small {
		--reset-size: 20px !important;
		--reset-icon-size: 10px !important;
	}

	// RTL support
	@at-root .rtl #{&} {
		&--inline {
			margin-left: 0;
			margin-right: 8px;
		}

		&--absolute {
			right: unset;
			left: -12px;
		}
	}

	/* Typography controls now use standard --absolute variant */
	&--typography {
		// This is now just an alias for the absolute variant
		// Typography controls should use 'maxi-reset-button--absolute' class instead
		@extend .maxi-reset-button;
	}
}

/* Typography controls now use the standard reset button system */
.maxi-typography-control__weight .maxi-reset-button,
.maxi-typography-control__size .maxi-reset-button,
.maxi-typography-control__line-height .maxi-reset-button,
.maxi-typography-control__bottom-gap .maxi-reset-button {
	// These should use the --absolute variant for positioning
	// No additional overrides needed - base styles handle everything
}

/* Specific context overrides - minimal and purposeful */
.maxi-color-control__palette-label {
	.maxi-reset-button {
		// Use --small variant for compact palette labels
		--reset-size: 20px;
		--reset-icon-size: 10px;
		position: absolute;
		top: 0;
		right: 0;
		margin-top: -4px;
	}
}

.toolbar-item__popover__font-options__wrap_family {
	.maxi-reset-button {
		// Use --large variant for font options
		--reset-size: 36px;
		--reset-icon-size: 18px;
		margin: 0;
	}
}

.components-circular-option-picker__custom-clear-wrapper {
	.maxi-reset-button {
		// Square variant for circular picker context
		border-radius: 4px;

		&:hover {
			background: var(--maxi-mid-green);
			border-color: var(--maxi-mid-green);

			svg {
				fill: var(--maxi-primary-color);
			}
		}
	}
}
/*******************************
* RTL Support
*******************************/
html[dir='rtl'] {
	.maxi-color-control__palette-label .maxi-reset-button {
		right: unset;
		left: 0;
	}
}
