$arrow-triangle-base-size: 14px;
$border-width: 1px;
$white: var(--maxi-white);
$gray-400: var(--maxi-grey-light);
$gray-900: var(--maxi-grey-dark);
$shadow-popover: 0 0 0 1px rgba(var(--maxi-black), 0.2),
	0 4px 11px rgba(var(--maxi-black), 0.1);
$radius-block-ui: 3px;
$panel-header-height: 32px;
$grid-unit-20: 20px;

.maxi-components-popover {
	z-index: var(--maxi-z-index-10);
	opacity: 1;

	&::before,
	&::after {
		content: none !important;
	}
	&.is-expanded {
		position: var(--maxi-layout-fixed);
		top: var(--maxi-space-0px);
		left: var(--maxi-space-0px);
		right: var(--maxi-space-0px);
		bottom: var(--maxi-space-0px);
		z-index: var(--maxi-z-index-10) !important;
	}
}

.maxi-components-popover__content {
	background: var(--maxi-white);
	// Using outline instead of border to avoid impacting
	// popover computations.
	outline: var(--maxi-border-width-1px) solid var(--maxi-grey-light);
	box-shadow: var(--maxi-shadow-popover);
	border-radius: var(--maxi-radius-block-ui);
	box-sizing: var(--maxi-box-sizing-border-box);
	width: var(--maxi-layout-min-content);
	position: relative !important;
	transition: all var(--maxi-transition-400ms) ease;

	&:hover {
		background-color: var(--maxi-pastel-green);
	}

	// Alternate treatment for popovers that put them at elevation zero with high contrast.
	.is-alternate & {
		outline: var(--maxi-border-width-1px) solid var(--maxi-grey-dark);
		box-shadow: none;
	}

	.components-popover.is-expanded & {
		position: var(--maxi-layout-static);
		height: calc(100% - var(--maxi-panel-header-height));
		overflow-y: var(--maxi-overflow-visible);
		width: var(--maxi-layout-auto);
		border: var(--maxi-reset-border);
		outline: var(--maxi-reset-outline);
		border-top: var(--maxi-border-width-1px) solid var(--maxi-grey-dark);
	}
}

.maxi-components-popover__header {
	align-items: var(--maxi-layout-center);
	background: var(--maxi-white);
	display: var(--maxi-display-flex);
	height: var(--maxi-space-32px);
	justify-content: var(--maxi-layout-space-between);
	padding: var(--maxi-space-0px) var(--maxi-space-8px) var(--maxi-space-0px)
		var(--maxi-space-20px);
}

.maxi-components-popover__header-title {
	overflow: var(--maxi-overflow-hidden);
	text-overflow: var(--maxi-text-overflow-ellipsis);
	white-space: var(--maxi-white-space-nowrap);
	width: var(--maxi-layout-full-width) !important;
}

.maxi-components-popover__close.components-button {
	z-index: var(--maxi-z-index-10);
}

.maxi-components-popover__arrow {
	position: var(--maxi-layout-absolute);
	width: var(--maxi-arrow-triangle-base-size);
	height: var(--maxi-arrow-triangle-base-size);
	pointer-events: var(--maxi-pointer-events-none);
	display: var(--maxi-display-flex);

	// Thin line that helps to make sure that the underlying
	// popover__content's outline is fully overlapped by the
	// arrow
	&::before {
		content: '';
		position: var(--maxi-layout-absolute);
		top: var(--maxi-space-1px);
		left: var(--maxi-space-1px);
		height: var(--maxi-space-2px);
		right: var(--maxi-space-1px);
		background-color: var(--maxi-white);
	}

	// Position and rotate the arrow depending on the popover's placement.
	// The `!important' is necessary to override the inline styles.
	&.is-top {
		bottom: calc(-1 * var(--maxi-arrow-triangle-base-size)) !important;
		transform: rotate(0);
	}
	&.is-right {
		/*rtl:begin:ignore*/
		left: calc(-1 * var(--maxi-arrow-triangle-base-size)) !important;
		transform: rotate(90deg);
	}
	&.is-bottom {
		top: calc(-1 * var(--maxi-arrow-triangle-base-size)) !important;
		transform: rotate(180deg);
	}
	&.is-left {
		/*rtl:begin:ignore*/
		right: calc(-1 * var(--maxi-arrow-triangle-base-size)) !important;
		transform: rotate(-90deg);
		/*rtl:end:ignore*/
	}
}

.maxi-components-popover__triangle {
	display: var(--maxi-display-block);
	flex: var(--maxi-flex-grow-1);
}

.maxi-components-popover__triangle-bg {
	// Fill color is the same as the .components-popover__content's background
	fill: var(--maxi-white) !important;
}

.maxi-components-popover__triangle-border {
	// Stroke colors are the same as the .components-popover__content's outline
	fill: var(--maxi-color-transparent) !important;
	stroke-width: var(--maxi-border-width-1px) !important;
	stroke: var(--maxi-grey-light) !important;

	.is-alternate & {
		stroke: var(--maxi-grey-dark) !important;
	}
}
