import getSizeStyles from '../getSizeStyles';

jest.mock('../../../attributes/getDefaultAttribute', () => {
	return jest.fn(attribute => {
		return attribute.includes('-g') ? 'normal' : undefined;
	});
});

describe('getSizeStyles', () => {
	it('Get a correct size styles', () => {
		const object = {
			_sao: true,
			'_mw.u-g': 'px',
			'_mw-g': '2',
			'_w.u-g': 'px',
			'_w-g': '1',
			'_miw.u-g': 'px',
			'_miw-g': '2',
			'_mh.u-g': 'px',
			'_mh-g': '3',
			'_h.u-g': 'px',
			'_h-g': '4',
			'_mih.u-g': 'px',
			'_mih-g': '1',
			'_mw-xxl': '2',
			'_w.u-xxl': 'px',
			'_w-xxl': '3',
			'_miw-xxl': '4',
			'_mh.u-xxl': 'px',
			'_mh-xxl': '1',
			'_h-xxl': '2',
			'_mih.u-xxl': 'px',
			'_mih-xxl': '2',
			'_mw.u-xl': 'px',
			'_mw-xl': '3',
			'_w.u-xl': 'px',
			'_w-xl': '4',
			'_miw.u-xl': 'px',
			'_miw-xl': '1',
			'_mh.u-xl': 'px',
			'_mh-xl': '2',
			'_h.u-xl': 'px',
			'_h-xl': '3',
			'_mih.u-xl': 'px',
			'_mih-xl': '4',
			'_mw.u-l': 'px',
			'_mw-l': '2',
			'_w.u-l': 'px',
			'_w-l': '1',
			'_miw.u-l': 'px',
			'_miw-l': '3',
			'_mh.u-l': 'px',
			'_mh-l': '2',
			'_h.u-l': 'px',
			'_h-l': '1',
			'_mih.u-l': 'px',
			'_mih-l': '1',
			'_mw.u-m': 'px',
			'_mw-m': '2',
			'_w.u-m': 'px',
			'_w-m': '3',
			'_miw.u-m': 'px',
			'_miw-m': '4',
			'_mh.u-m': 'px',
			'_mh-m': '1',
			'_h.u-m': 'px',
			'_h-m': '2',
			'_mih.u-m': 'px',
			'_mih-m': '2',
			'_mw.u-s': 'px',
			'_mw-s': '3',
			'_w.u-s': 'px',
			'_w-s': '4',
			'_miw.u-s': 'px',
			'_miw-s': '1',
			'_mh.u-s': 'px',
			'_mh-s': '1',
			'_h.u-s': 'px',
			'_h-s': '1',
			'_mih.u-s': 'px',
			'_mih-s': '2',
			'_mw.u-xs': 'px',
			'_mw-xs': '3',
			'_w.u-xs': 'px',
			'_w-xs': '4',
			'_miw.u-xs': 'px',
			'_miw-xs': '1',
			'_mh.u-xs': 'px',
			'_mh-xs': '2',
			'_h.u-xs': 'px',
			'_h-xs': '3',
			'_mih.u-xs': 'px',
			'_mih-xs': '4',
		};

		const result = getSizeStyles(object);
		expect(result).toMatchSnapshot();
	});

	it('Get a correct size styles with force aspect ratio', () => {
		const object = {
			_sao: true,
			'_mw.u-g': 'px',
			'_mw-g': '2',
			'_w.u-g': 'px',
			'_w-g': '1',
			'_miw.u-g': 'px',
			'_miw-g': '2',
			'_mh.u-g': 'px',
			'_mh-g': '3',
			'_h.u-g': 'px',
			'_h-g': '4',
			'_mih.u-g': 'px',
			'_mih-g': '1',
			'_mw.u-xxl': 'px',
			'_mw-xxl': '2',
			'_w.u-xxl': 'px',
			'_w-xxl': '3',
			'_miw.u-xxl': 'px',
			'_miw-xxl': '4',
			'_mh.u-xxl': 'px',
			'_mh-xxl': '1',
			'_h.u-xxl': 'px',
			'_h-xxl': '2',
			'_mih.u-xxl': 'px',
			'_mih-xxl': '2',
			'_mw.u-xl': 'px',
			'_mw-xl': '3',
			'_w.u-xl': 'px',
			'_w-xl': '4',
			'_miw.u-xl': 'px',
			'_miw-xl': '1',
			'_mh.u-xl': 'px',
			'_mh-xl': '2',
			'_far-xl': true,
			'_mih-xl': '4',
			'_mw.u-l': 'px',
			'_mw-l': '2',
			'_w.u-l': 'px',
			'_w-l': '1',
			'_miw.u-l': 'px',
			'_miw-l': '3',
			'_mh.u-l': 'px',
			'_mh-l': '2',
			'_mih.u-l': 'px',
			'_mih-l': '1',
			'_mw.u-m': 'px',
			'_mw-m': '2',
			'_w.u-m': 'px',
			'_w-m': '3',
			'_miw.u-m': 'px',
			'_miw-m': '4',
			'_mh.u-m': 'px',
			'_mh-m': '1',
			'_mih.u-m': 'px',
			'_mih-m': '2',
			'_mw.u-s': 'px',
			'_mw-s': '3',
			'_w.u-s': 'px',
			'_w-s': '4',
			'_miw.u-s': 'px',
			'_miw-s': '1',
			'_mh.u-s': 'px',
			'_mh-s': '1',
			'_h.u-s': 'px',
			'_h-s': '1',
			'_mih.u-s': 'px',
			'_mih-s': '2',
			'_mw.u-xs': 'px',
			'_mw-xs': '3',
			'_w.u-xs': 'px',
			'_w-xs': '4',
			'_miw.u-xs': 'px',
			'_miw-xs': '1',
			'_mh.u-xs': 'px',
			'_mh-xs': '2',
			'_h.u-xs': 'px',
			'_h-xs': '3',
			'_mih.u-xs': 'px',
			'_mih-xs': '4',
		};
		const result = getSizeStyles(object);
		expect(result).toMatchSnapshot();
	});

	it('Get a correct size styles with width fit content', () => {
		const object = {
			_sao: true,
			'_mw.u-g': 'px',
			'_mw-g': '2',
			'_w.u-g': 'px',
			'_w-g': 'fit-content',
			'_miw.u-g': 'px',
			'_miw-g': '2',
			'_mh.u-g': 'px',
			'_mh-g': '3',
			'_h.u-g': 'px',
			'_h-g': '4',
			'_mih.u-g': 'px',
			'_mih-g': '1',
			'_mw.u-xxl': 'px',
			'_mw-xxl': '2',
			'_w.u-xxl': 'px',
			'_w-xxl': '3',
			'_miw.u-xxl': 'px',
			'_miw-xxl': '4',
			'_mh.u-xxl': 'px',
			'_mh-xxl': '1',
			'_h.u-xxl': 'px',
			'_h-xxl': '2',
			'_mih.u-xxl': 'px',
			'_mih-xxl': '2',
			'_mw.u-xl': 'px',
			'_mw-xl': '3',
			'_w.u-xl': 'px',
			'_w-xl': '4',
			'_miw.u-xl': 'px',
			'_miw-xl': '1',
			'_mh.u-xl': 'px',
			'_mh-xl': '2',
			'_mih.u-xl': 'px',
			'_mih-xl': '4',
			'_mw.u-l': 'px',
			'_mw-l': '2',
			'_w.u-l': 'px',
			'_w-l': '1',
			'_miw.u-l': 'px',
			'_miw-l': '3',
			'_mh.u-l': 'px',
			'_mh-l': '2',
			'_mih.u-l': 'px',
			'_mih-l': '1',
			'_mw.u-m': 'px',
			'_mw-m': '2',
			'_w.u-m': 'px',
			'_w-m': '3',
			'_miw.u-m': 'px',
			'_miw-m': '4',
			'_mh.u-m': 'px',
			'_mh-m': '1',
			'_mih.u-m': 'px',
			'_mih-m': '2',
			'_mw.u-s': 'px',
			'_mw-s': '3',
			'_w.u-s': 'px',
			'_w-s': '4',
			'_miw.u-s': 'px',
			'_miw-s': '1',
			'_mh.u-s': 'px',
			'_mh-s': '1',
			'_h.u-s': 'px',
			'_h-s': '1',
			'_mih.u-s': 'px',
			'_mih-s': '2',
			'_mw.u-xs': 'px',
			'_mw-xs': '3',
			'_w.u-xs': 'px',
			'_w-xs': '4',
			'_miw.u-xs': 'px',
			'_miw-xs': '1',
			'_mh.u-xs': 'px',
			'_mh-xs': '2',
			'_h.u-xs': 'px',
			'_h-xs': '3',
			'_mih.u-xs': 'px',
			'_mih-xs': '4',
			'_wfc-g': true,
		};

		const result = getSizeStyles(object);
		expect(result).toMatchSnapshot();
	});

	it('Get a correct size styles with full width', () => {
		const object = {
			'_fw-g': 'full',
			'_fw-l': 'normal',
		};

		const result = getSizeStyles(object);
		expect(result).toMatchSnapshot();
	});

	it('Get a correct size styles with full width 2', () => {
		const object = {
			_sao: true,
			'_fw-g': 'full',
			'_fw-xl': 'normal',
			'_fw-l': 'full',
			'_miw-l': '2',
			'_miw.u-l': 'px',
			'_fw-m': 'normal',
			'_miw-m': '3',
			'_miw-s': '0',
		};

		const result = getSizeStyles(object);
		expect(result).toMatchSnapshot();
	});

	it('Get a correct size styles with full width 3', () => {
		const object = {
			'_fw-g': 'full',
			_sao: true,
			'_mw.u-g': 'px',
			'_mw-g': '2',
			'_w.u-g': 'px',
			'_w-g': 'fit-content',
			'_miw.u-g': 'px',
			'_miw-g': '2',
			'_mh.u-g': 'px',
			'_mh-g': '3',
			'_h.u-g': 'px',
			'_h-g': '4',
			'_mih.u-g': 'px',
			'_mih-g': '1',
		};

		const result = getSizeStyles(object);
		expect(result).toMatchSnapshot();
	});

	it('Get a correct size styles with full width responsive', () => {
		const object = {
			'_fw-g': 'full',
			_sao: true,
			'_mw.u-g': 'px',
			'_mw-g': '2',
			'_w.u-g': 'px',
			'_w-g': 'fit-content',
			'_miw.u-g': 'px',
			'_miw-g': '2',
			'_mh.u-g': 'px',
			'_mh-g': '3',
			'_h.u-g': 'px',
			'_h-g': '4',
			'_mih.u-g': 'px',
			'_mih-g': '1',
			'_fw-xxl': 'normal',
			'_mw.u-xxl': 'px',
			'_mw-xxl': '2',
			'_w.u-xxl': 'px',
			'_w-xxl': '3',
			'_miw.u-xxl': 'px',
			'_miw-xxl': '4',
			'_mh.u-xxl': 'px',
			'_mh-xxl': '1',
			'_h.u-xxl': 'px',
			'_h-xxl': '2',
			'_mih.u-xxl': 'px',
			'_mih-xxl': '2',
			'_fw-xl': 'full',
			'_mw.u-xl': 'px',
			'_mw-xl': '3',
			'_w.u-xl': 'px',
			'_w-xl': '4',
			'_miw.u-xl': 'px',
			'_miw-xl': '1',
			'_mh.u-xl': 'px',
			'_mh-xl': '2',
			'_mih.u-xl': 'px',
			'_mih-xl': '4',
			'_fw-l': 'normal',
			'_mw.u-l': 'px',
			'_mw-l': '2',
			'_w.u-l': 'px',
			'_w-l': '1',
			'_miw.u-l': 'px',
			'_miw-l': '3',
			'_mh.u-l': 'px',
			'_mh-l': '2',
			'_mih.u-l': 'px',
			'_mih-l': '1',
			'_fw-m': 'full',
			'_mw.u-m': 'px',
			'_mw-m': '2',
			'_w.u-m': 'px',
			'_w-m': '3',
			'_miw.u-m': 'px',
			'_miw-m': '4',
			'_mh.u-m': 'px',
			'_mh-m': '1',
			'_mih.u-m': 'px',
			'_mih-m': '2',
			'_fw-s': 'normal',
			'_mw.u-s': 'px',
			'_mw-s': '3',
			'_w.u-s': 'px',
			'_w-s': '4',
			'_miw.u-s': 'px',
			'_miw-s': '1',
			'_mh.u-s': 'px',
			'_mh-s': '1',
			'_h.u-s': 'px',
			'_h-s': '1',
			'_mih.u-s': 'px',
			'_mih-s': '2',
			'_fw-xs': 'full',
			'_mw.u-xs': 'px',
			'_mw-xs': '3',
			'_w.u-xs': 'px',
			'_w-xs': '4',
			'_miw.u-xs': 'px',
			'_miw-xs': '1',
			'_mh.u-xs': 'px',
			'_mh-xs': '2',
			'_h.u-xs': 'px',
			'_h-xs': '3',
			'_mih.u-xs': 'px',
			'_mih-xs': '4',
			'_wfc-g': true,
		};

		const result = getSizeStyles(object);
		expect(result).toMatchSnapshot();
	});

	it('Get a correct size styles with full width responsive 2', () => {
		const object = {
			'_fw-g': 'normal',
			_sao: true,
			'_mw.u-g': 'px',
			'_mw-g': '2',
			'_w.u-g': 'px',
			'_w-g': 'fit-content',
			'_miw.u-g': 'px',
			'_miw-g': '2',
			'_mh.u-g': 'px',
			'_mh-g': '3',
			'_h.u-g': 'px',
			'_h-g': '4',
			'_mih.u-g': 'px',
			'_mih-g': '1',
			'_fw-xxl': 'full',
			'_mw.u-xxl': 'px',
			'_mw-xxl': '2',
			'_w.u-xxl': 'px',
			'_w-xxl': '3',
			'_miw.u-xxl': 'px',
			'_miw-xxl': '4',
			'_mh.u-xxl': 'px',
			'_mh-xxl': '1',
			'_h.u-xxl': 'px',
			'_h-xxl': '2',
			'_mih.u-xxl': 'px',
			'_mih-xxl': '2',
			'_fw-xl': 'normal',
			'_mw.u-xl': 'px',
			'_mw-xl': '3',
			'_w.u-xl': 'px',
			'_w-xl': '4',
			'_miw.u-xl': 'px',
			'_miw-xl': '1',
			'_mh.u-xl': 'px',
			'_mh-xl': '2',
			'_mih.u-xl': 'px',
			'_mih-xl': '4',
			'_fw-l': 'full',
			'_mw.u-l': 'px',
			'_mw-l': '2',
			'_w.u-l': 'px',
			'_w-l': '1',
			'_miw.u-l': 'px',
			'_miw-l': '3',
			'_mh.u-l': 'px',
			'_mh-l': '2',
			'_mih.u-l': 'px',
			'_mih-l': '1',
			'_fw-m': 'normal',
			'_mw.u-m': 'px',
			'_mw-m': '2',
			'_w.u-m': 'px',
			'_w-m': '3',
			'_mh.u-m': 'px',
			'_mh-m': '1',
			'_mih.u-m': 'px',
			'_mih-m': '2',
			'_fw-s': 'full',
			'_mw.u-s': 'px',
			'_mw-s': '3',
			'_w.u-s': 'px',
			'_w-s': '4',
			'_mh.u-s': 'px',
			'_mh-s': '1',
			'_h.u-s': 'px',
			'_h-s': '1',
			'_mih.u-s': 'px',
			'_mih-s': '2',
			'_fw-xs': 'normal',
			'_mw.u-xs': 'px',
			'_mw-xs': '3',
			'_w.u-xs': 'px',
			'_w-xs': '4',
			'_miw.u-xs': 'px',
			'_miw-xs': '1',
			'_mh.u-xs': 'px',
			'_mh-xs': '2',
			'_h.u-xs': 'px',
			'_h-xs': '3',
			'_mih.u-xs': 'px',
			'_mih-xs': '4',
			'_wfc-g': true,
		};

		const result = getSizeStyles(object);
		expect(result).toMatchSnapshot();
	});
});
