const breakpoints=["general","xxl","xl","l","m","s","xs"],relations=()=>{const t=(t,e)=>{const n=(t,e)=>{let s={},o={};return Object.entries(t).forEach((([t,i])=>{if(breakpoints.includes(t)&&(window.innerWidth<=i.breakpoint||!i.breakpoint)){s={...s,...i.styles};const n=n=>void 0!==e[`${n}-${t}`]?{[n]:e[`${n}-${t}`]}:{};o={...o,...n("transition-status"),...n("transition-duration"),...n("transition-delay"),...n("easing")}}else if(!i.breakpoint){const{stylesObj:c,effectsObj:a}=n(i,e);s={...s,[t]:c,isTargets:!0},o={...o,...a}}})),{stylesObj:s,effectsObj:o}},{stylesObj:s,effectsObj:o}=n(t,e);return{stylesObj:s,effectsObj:o}},e=t=>t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),n=(t,s,o=!1)=>{if(t.isTargets)Object.entries(t).forEach((([t,e])=>{"isTargets"!==t&&n(e,`${s} ${t}`,o)}));else{const n=document.querySelector("#maxi-blocks-interaction-css"),i=`body.maxi-blocks--active ${s} {`.replace(/\s{2,}/g," ");Object.entries(t).forEach((([t,s])=>{if(o){const s=new RegExp(`(${e(i)}.*?) ${t}:.*?;`);n.textContent=n.textContent.replace(s,"$1")}else{const o=new RegExp(`(${e(i)})`);n.textContent.match(o)||(n.textContent+=`${i}}`),n.textContent=n.textContent.replace(o,`$1 ${t}: ${s};`)}}))}},s=(t,n,i,c=!1,a=!1)=>{const r=n?.isTargets?Object.keys(n):null;if(r)r.forEach((e=>{"isTargets"!==e&&s(`${t} ${e}`,n[e],i,c,a)}));else{const s=document.querySelector("#maxi-blocks-interaction-css"),r=`body.maxi-blocks--active ${t} {`.replace(/\s{2,}/g," "),l=o(n,i,c);if(a){const t=new RegExp(`(${e(r)}.*?) transition:.*?;`);s.textContent=s.textContent.replace(t,"$1")}else{const t=new RegExp(`(${e(r)})`);s.textContent.match(t)||(s.textContent+=`${r}}`);const n=new RegExp(`(${e(r)}[^{]*transition:)`);if(!l)return;s.textContent.match(n)?!c&&(s.textContent=s.textContent.replace(n,`$1 ${l}`)):s.textContent=s.textContent.replace(t,`$1 transition: ${l.replace(/, $/,"")};`)}}},o=(t,e,n)=>n?e["transition-status"]?`all ${e["transition-duration"]}s ${e["transition-delay"]}s ${e.easing}`:"all 0s 0s, ":Object.keys(t).reduce(((t,n)=>e["transition-status"]?`${t}${n} ${e["transition-duration"]}s ${e["transition-delay"]}s ${e.easing}, `:`${t}${n} 0s 0s, `),"");maxiRelations[0]?.forEach((e=>{if(!e?.uniqueID)return;const o=document.querySelector(`.${e.trigger}`),i=`#${e.uniqueID} ${e.target??""}`;let c;switch(e.action){case"hover":o.addEventListener("mouseenter",(()=>{clearTimeout(c);const{stylesObj:o,effectsObj:a}=t(e.css,e.effects);s(i,o,a,"Icon colour"===e.settings||"Button icon"===e.settings),n(o,i)})),o.addEventListener("mouseleave",(()=>{const{stylesObj:o,effectsObj:a}=t(e.css,e.effects);n(o,i,!0),c=setTimeout((()=>{s(i,o,a,!1,!0)}),1e3*e.effects["transition-duration-general"]+1e3)}));break;case"click":o.addEventListener("click",(()=>{const{stylesObj:o,effectsObj:c}=t(e.css,e.effects);s(i,o,c,"Icon colour"===e.settings||"Button icon"===e.settings),n(o,i)}))}}))};window.addEventListener("load",relations),window.addEventListener("load",(()=>{if(maxiRelations[0].length&&!document.querySelector("#maxi-blocks-interaction-css")){const t=document.querySelector("#maxi-blocks-inline-css");if(t){const e=document.createElement("style");e.id="maxi-blocks-interaction-css",t.parentNode.insertBefore(e,t.nextSibling)}}}));
