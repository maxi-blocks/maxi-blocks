{"version":3,"sources":["@wordpress/compose/src/higher-order/with-global-events/index.js"],"names":["forEach","Component","forwardRef","createHigherOrderComponent","Listener","listener","withGlobalEvents","eventTypesToHandlers","WrappedComponent","Wrapper","arguments","handleEvent","bind","handleRef","handler","eventType","add","remove","event","type","wrappedRef","el","props","forwardedRef","ownProps","ref"],"mappings":";;;;;;;;;;;;;AAAA;;;AAGA,SAASA,OAAT,QAAwB,QAAxB;AAEA;;;;AAGA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,oBAAtC;AAEA;;;;AAGA,OAAOC,0BAAP,MAAuC,2CAAvC;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA;;;;;;AAKA,IAAMC,QAAQ,GAAG,IAAID,QAAJ,EAAjB;AAEA;;;;;;;;;;;;;;;;;;AAiBA,SAASE,gBAAT,CAA2BC,oBAA3B,EAAkD;AACjD,SAAOJ,0BAA0B,CAAE,UAAEK,gBAAF,EAAwB;AAAA,QACpDC,OADoD;AAAA;;AAAA;;AAEzD,yBAAc;AAAA;;AAAA;;AACb,mCAAUC,SAAV;AAEA,cAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AACA,cAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,+BAAjB;AAJa;AAKb;;AAPwD;AAAA;AAAA,4CASrC;AAAA;;AACnBZ,UAAAA,OAAO,CAAEO,oBAAF,EAAwB,UAAEO,OAAF,EAAWC,SAAX,EAA0B;AACxDV,YAAAA,QAAQ,CAACW,GAAT,CAAcD,SAAd,EAAyB,MAAzB;AACA,WAFM,CAAP;AAGA;AAbwD;AAAA;AAAA,+CAelC;AAAA;;AACtBf,UAAAA,OAAO,CAAEO,oBAAF,EAAwB,UAAEO,OAAF,EAAWC,SAAX,EAA0B;AACxDV,YAAAA,QAAQ,CAACY,MAAT,CAAiBF,SAAjB,EAA4B,MAA5B;AACA,WAFM,CAAP;AAGA;AAnBwD;AAAA;AAAA,oCAqB5CG,KArB4C,EAqBpC;AACpB,cAAMJ,OAAO,GAAGP,oBAAoB,CAAEW,KAAK,CAACC,IAAR,CAApC;;AACA,cAAK,OAAO,KAAKC,UAAL,CAAiBN,OAAjB,CAAP,KAAsC,UAA3C,EAAwD;AACvD,iBAAKM,UAAL,CAAiBN,OAAjB,EAA4BI,KAA5B;AACA;AACD;AA1BwD;AAAA;AAAA,kCA4B9CG,EA5B8C,EA4BzC;AACf,eAAKD,UAAL,GAAkBC,EAAlB,CADe,CAEf;AACA;AACA;;AACA,cAAK,KAAKC,KAAL,CAAWC,YAAhB,EAA+B;AAC9B,iBAAKD,KAAL,CAAWC,YAAX,CAAyBF,EAAzB;AACA;AACD;AApCwD;AAAA;AAAA,iCAsChD;AACR,iBACC,cAAC,gBAAD,eACM,KAAKC,KAAL,CAAWE,QADjB;AAEC,YAAA,GAAG,EAAG,KAAKX;AAFZ,aADD;AAMA;AA7CwD;;AAAA;AAAA,MACpCZ,SADoC;;AAgD1D,WAAOC,UAAU,CAAE,UAAEoB,KAAF,EAASG,GAAT,EAAkB;AACpC,aAAO,cAAC,OAAD;AAAS,QAAA,QAAQ,EAAGH,KAApB;AAA4B,QAAA,YAAY,EAAGG;AAA3C,QAAP;AACA,KAFgB,CAAjB;AAGA,GAnDgC,EAmD9B,kBAnD8B,CAAjC;AAoDA;;AAED,eAAenB,gBAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { forEach } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component, forwardRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport createHigherOrderComponent from '../../utils/create-higher-order-component';\nimport Listener from './listener';\n\n/**\n * Listener instance responsible for managing document event handling.\n *\n * @type {Listener}\n */\nconst listener = new Listener();\n\n/**\n * Higher-order component creator which, given an object of DOM event types and\n * values corresponding to a callback function name on the component, will\n * create or update a window event handler to invoke the callback when an event\n * occurs. On behalf of the consuming developer, the higher-order component\n * manages unbinding when the component unmounts, and binding at most a single\n * event handler for the entire application.\n *\n * @param {Object<string,string>} eventTypesToHandlers Object with keys of DOM\n *                                                     event type, the value a\n *                                                     name of the function on\n *                                                     the original component's\n *                                                     instance which handles\n *                                                     the event.\n *\n * @return {Function} Higher-order component.\n */\nfunction withGlobalEvents( eventTypesToHandlers ) {\n\treturn createHigherOrderComponent( ( WrappedComponent ) => {\n\t\tclass Wrapper extends Component {\n\t\t\tconstructor() {\n\t\t\t\tsuper( ...arguments );\n\n\t\t\t\tthis.handleEvent = this.handleEvent.bind( this );\n\t\t\t\tthis.handleRef = this.handleRef.bind( this );\n\t\t\t}\n\n\t\t\tcomponentDidMount() {\n\t\t\t\tforEach( eventTypesToHandlers, ( handler, eventType ) => {\n\t\t\t\t\tlistener.add( eventType, this );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tcomponentWillUnmount() {\n\t\t\t\tforEach( eventTypesToHandlers, ( handler, eventType ) => {\n\t\t\t\t\tlistener.remove( eventType, this );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thandleEvent( event ) {\n\t\t\t\tconst handler = eventTypesToHandlers[ event.type ];\n\t\t\t\tif ( typeof this.wrappedRef[ handler ] === 'function' ) {\n\t\t\t\t\tthis.wrappedRef[ handler ]( event );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thandleRef( el ) {\n\t\t\t\tthis.wrappedRef = el;\n\t\t\t\t// Any component using `withGlobalEvents` that is not setting a `ref`\n\t\t\t\t// will cause `this.props.forwardedRef` to be `null`, so we need this\n\t\t\t\t// check.\n\t\t\t\tif ( this.props.forwardedRef ) {\n\t\t\t\t\tthis.props.forwardedRef( el );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trender() {\n\t\t\t\treturn (\n\t\t\t\t\t<WrappedComponent\n\t\t\t\t\t\t{ ...this.props.ownProps }\n\t\t\t\t\t\tref={ this.handleRef }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn forwardRef( ( props, ref ) => {\n\t\t\treturn <Wrapper ownProps={ props } forwardedRef={ ref } />;\n\t\t} );\n\t}, 'withGlobalEvents' );\n}\n\nexport default withGlobalEvents;\n"]}