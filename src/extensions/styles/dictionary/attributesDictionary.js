const dictionary = {
	accordion: {
		accordionLayout: 'acl',
		autoPaneClose: 'apc',
		isCollapsible: 'ico',
		animationDuration: 'ad',
	},
	accordionLine: {},
	accordionTitle: {
		'tite-typography-status-hover': 'tths',
		'tite-typography-status-active': 'ttas',
		'title-background-status': 'tbgs',
		'title-background-status-hover': 'tbgsh',
		'title-background-status-active': 'tbgsa',
	},
	alignment: {
		alignment: 'a',
	},
	arrow: {
		'arrow-status': 'as',
		'arrow-side': 'asi',
		'arrow-position': 'ap',
		'arrow-width': 'aw',
	},
	arrowIcon: {},
	arrowIconHover: {},
	background: {},
	backgroundActive: {},
	backgroundHover: {},
	border: {
		'border-style': 'bos',
		'border-top-width': 'btw',
		'border-right-width': 'brw',
		'border-bottom-width': 'bbw',
		'border-left-width': 'blw',
		'border-sync-width': 'bsw',
		'border-unit-width': 'buw',
		'border-top-left-radius': 'btlr',
		'border-top-right-radius': 'btrr',
		'border-bottom-right-radius': 'bbrr',
		'border-bottom-left-radius': 'bblr',
		'border-sync-radius': 'bsr',
		'border-unit-radius': 'bur',
	},
	borderActive: {},
	borderHover: {},
	boxShadow: {
		'box-shadow-inset': 'bsi',
		'box-shadow-horizontal': 'bsh',
		'box-shadow-horizontal-unit': 'bshu',
		'box-shadow-vertical': 'bsv',
		'box-shadow-vertical-unit': 'bsvu',
		'box-shadow-blur': 'bsb',
		'box-shadow-blur-unit': 'bsbu',
		'box-shadow-spread': 'bss',
		'box-shadow-spread-unit': 'bssu',
	},
	boxShadowActive: {},
	boxShadowHover: {},
	breakpoints: {
		breakpoints: 'bp',
	},
	clipPath: {
		'clip-path': 'cp',
		'clip-path-status': 'cps',
	},
	clipPathHover: {},
	columnSize: {
		'column-size': 'cs',
		'column-fit-content': 'cfc',
	},
	customCss: {
		'custom-css': 'cc',
	},
	display: {
		display: 'd',
	},
	displayHover: {},
	divider: {
		'divider-border-top-width': 'dbtw',
		'divider-border-top-unit': 'dbtu',
		'divider-border-right-width': 'dbrw',
		'divider-border-right-unit': 'dbru',
		'divider-border-radius': 'dbr',
		'divider-width': 'dw',
		'divider-width-unit': 'dwu',
		'divider-height': 'dh',
		'line-align': 'la',
		'line-vertical': 'lv',
		'line-horizontal': 'lh',
		'line-orientation': 'lo',
		'divider-box-shadow-status-hover': 'dbsh',
	},
	dividerHover: {},
	dotIcon: {},
	dotIconActive: {},
	dotIconHover: {},
	flex: {
		'flex-grow': 'fg',
		'flex-shrink': 'fls',
		'flex-basis': 'fb',
		'flex-basis-unit': 'fbu',
		'flex-wrap': 'flw',
		'justify-content': 'jc',
		'flex-direction': 'fd',
		'align-items': 'ai',
		'align-content': 'ac',
		'row-gap': 'rg',
		'row-gap-unit': 'rgu',
		'column-gap': 'cg',
		'column-gap-unit': 'cgu',
		order: 'or',
	},
	global: {
		'maxi-version-current': 'mvc',
		'maxi-version-origin': 'mvo',
		blockStyle: 'bs',
		extraClassName: 'ecn',
		anchorLink: 'al',
		isFirstOnHierarchy: 'ioh',
		uniqueID: 'uid',
		customLabel: 'cl',
		relations: 'r',
	},
	hover: {
		'hover-type': 'ht',
		'hover-preview': 'hp',
		'hover-extension': 'he',
		'hover-basic-effect-type': 'hbet',
		'hover-text-effect-type': 'htet',
		'hover-text-preset': 'htp',
		'hover-transition-easing': 'hte',
		'hover-transition-easing-cubic-bezier': 'htecb',
		'hover-transition-duration': 'htd',
		'hover-basic-zoom-in-value': 'hbziv',
		'hover-basic-zoom-out-value': 'hbzov',
		'hover-basic-slide-value': 'hbsv',
		'hover-basic-rotate-value': 'hbrv',
		'hover-basic-blur-value': 'hbbv',
	},
	icon: {
		svgType: 'st',
		'icon-inherit': 'ii',
		'icon-content': 'ic',
		'icon-only': 'io',
		'icon-position': 'ip',
	},
	iconBorder: {},
	iconBorderHover: {},
	iconHover: {},
	imageShape: {
		'image-shape-scale': 'ishs',
		'image-shape-rotate': 'ishr',
		'image-shape-flip-x': 'ishfx',
		'image-shape-flip-y': 'ishfy',
	},
	link: {
		link: 'l',
		'link-hover': 'lih',
		'link-active': 'lia',
		'link-visited': 'liv',
	},
	map: {
		'map-provider': 'mpp',
		'map-latitude': 'mpl',
		'map-longitude': 'mplo',
		'map-zoom': 'mpz',
		'map-min-zoom': 'mpmz',
		'map-max-zoom': 'mpmxz',
		'map-markers': 'mpm',
	},
	mapInteraction: {
		'map-dragging': 'mpd',
		'map-touch-zoom': 'mptz',
		'map-double-click-zoom': 'mpdcz',
		'map-scroll-wheel-zoom': 'mpswz',
	},
	mapMarker: {
		'map-marker': 'mma',
		'map-marker-icon': 'mmi',
	},
	mapPopup: {},
	mapPopupText: {},
	margin: {
		'margin-top': 'mt',
		'margin-right': 'mr',
		'margin-bottom': 'mb',
		'margin-left': 'ml',
		'margin-sync': 'ms',
		'margin-top-unit': 'mtu',
		'margin-right-unit': 'mru',
		'margin-bottom-unit': 'mbu',
		'margin-left-unit': 'mlu',
	},
	navigation: {
		'navigation-arrow-both-status': 'nabs',
		'navigation-dot-status': 'nds', // Status!
		'navigation-arrow-position': 'nap',
		'navigation-dot-position': 'ndp',
		'navigation-arrow-first-svgType': 'nafs',
		'navigation-arrow-second-svgType': 'nals',
		'navigation-dot-svgType': 'nds',
		'active-navigation-dot-icon-status': 'andis',
		'navigation-arrow-first-icon-content': 'nafic',
		'navigation-arrow-second-icon-content': 'nasic',
		'navigation-dot-icon-content': 'ndic',
	},
	numberCounter: {
		// Needs to be checked, a bit strange
		'number-counter-width-auto': 'ncwa',
		'number-counter-status': 'ncs',
		'number-counter-preview': 'ncp',
		'number-counter-percentage-sign-status': 'ncpss',
		'number-counter-rounded-status': 'ncrs',
		'number-counter-circle-status': 'nccs',
		'number-counter-start': 'ncsa',
		'number-counter-end': 'nce',
		'number-counter-stroke': 'ncst',
		'number-counter-duration': 'ncd',
		'number-counter-start-animation': 'ncsan',
		'number-counter-start-animation-offset': 'ncsao',
		'number-counter-title-font-size': 'nctfs',
	},
	opacity: {
		opacity: 'o',
	},
	opacityHover: {},
	overflow: {
		'overflow-x': 'ox',
		'overflow-y': 'oy',
	},
	padding: {
		'padding-top': 'pt',
		'padding-right': 'pr',
		'padding-bottom': 'pb',
		'padding-left': 'pl',
		'padding-sync': 'ps',
		'padding-top-unit': 'ptu',
		'padding-right-unit': 'pru',
		'padding-bottom-unit': 'pbu',
		'padding-left-unit': 'plu',
	},
	placeholderColor: {
		'placeholder-color': 'pc',
		'placeholder-color-unit': 'pcu',
	},
	position: {
		position: 'pos',
		'position-top': 'pst',
		'position-right': 'psr',
		'position-bottom': 'psb',
		'position-left': 'psl',
		'position-sync': 'pss',
		'position-top-unit': 'pstu',
		'position-right-unit': 'psru',
		'position-bottom-unit': 'psbu',
		'position-left-unit': 'pslu',
	},
	rowPattern: {
		'row-pattern': 'rp',
	},
	scroll: {
		// It's a whole world lol
	},
	searchButton: {
		buttonSkin: 'bus',
		iconRevealAction: 'ira',
		buttonContent: 'bc',
		buttonContentClose: 'bcc',
	},
	shape: {
		'shape-width': 'sw',
		'shape-width-unit': 'swu',
	},
	shapeDivider: {
		'shape-divider-top-height': 'sdth',
		'shape-divider-top-height-unit': 'sdthu',
		'shape-divider-bottom-height': 'sdbh',
		'shape-divider-bottom-height-unit': 'sdbhu',
		'shape-divider-top-status': 'sdt',
		'shape-divider-top-shape-style': 'sdtss',
		'shape-divider-top-effects-status': 'sdtess',
		'shape-divider-bottom-status': 'sdb',
		'shape-divider-bottom-shape-style': 'sdbss',
		'shape-divider-bottom-effects-status': 'sdbees',
	},
	size: {
		'size-advanced-options': 'sao',
		'width-fit-content': 'wfc',
		'force-aspect-ratio': 'far',
		'full-width': 'fw',
		'max-width-unit': 'mwu',
		'max-height-unit': 'mhu',
		'min-width-unit': 'miwu',
		'min-height-unit': 'mihu',
		'width-unit': 'wu',
		'height-unit': 'hu',
		'max-width': 'mw',
		'max-height': 'mh',
		'min-width': 'miw',
		'min-height': 'mih',
		width: 'w',
		height: 'h',
	},
	slider: {
		isEditView: 'iev',
		numberOfSlides: 'nos',
		isLoop: 'sil',
		isAutoplay: 'sia',
		pauseOnHover: 'poh',
		pauseOnInteraction: 'poi',
		'slider-autoplay-speed': 'sas',
		'slider-transition': 'slt',
		'slider-transition-speed': 'sts',
	},
	svg: {
		'svg-status-hover': 'ssh',
	},
	textAlignment: {
		'text-alignment': 'ta',
	},
	transform: {
		'transform-scale': 'ts',
		'transform-translate': 'ttr',
		'transform-rotate': 'tr',
		'transform-origin': 'tor',
		'transform-target': 'tt',
	},
	transition: {
		transition: 't',
		'transition-change-all': 'tca',
	},
	typography: {
		'font-family': 'ff',
		'font-size-unit': 'fsu',
		'font-size': 'fs',
		'line-height-unit': 'lhu',
		'line-height': 'lhe',
		'letter-spacing-unit': 'lsu',
		'letter-spacing': 'ls',
		'font-weight': 'fwe',
		'text-transform': 'tet',
		'font-style': 'fis',
		'text-decoration': 'td',
		'text-indent': 'ti',
		'text-indent-unit': 'tiu',
		'text-shadow': 'tsh',
		'vertical-align': 'va',
		'custom-formats': 'cf',
		'text-orientation': 'to',
		'text-direction': 'tdi',
		'white-space': 'ws',
		'word-spacing': 'wsp',
		'word-spacing-unit': 'wsu',
		'bottom-gap': 'bg',
		'bottom-gap-unit': 'bgu',
	},
	typographyHover: {},
	video: {
		url: 'u',
		embedUrl: 'eu',
		startTime: 'stt',
		endTime: 'et',
		videoRatio: 'vr',
		popupRatio: 'pra',
		videoType: 'vt',
		isLoop: 'vil',
		isMuted: 'im',
		isAutoplay: 'via',
		showPlayerControls: 'spc',
		hideImage: 'hi',
		popAnimation: 'pan',
	},
	videoOverlay: {
		// 'overlay-mediaID':
		// 'overlay-mediaURL':
		// 'overlay-altSelector':
		// 'overlay-mediaAlt':
		// Maybe replace with new group of attributes?
	},
	videoPopup: {},
	zIndex: {
		'z-index': 'zi',
	},
	// Extra
	palette: {
		'palette-status': 'pa-status', // `-status` will be changed to `st` in Phase 2
		'palette-color': 'pac',
		'palette-opacity': 'pao',
		color: 'c',
	},
};

const flattenDictionary = dict => {
	const EXCLUDED_GROUPS = ['palette'];

	let response = {};

	Object.entries(dict).forEach(([key, val]) => {
		if (EXCLUDED_GROUPS.includes(key)) return;

		response = {
			...response,
			...val,
		};
	});

	return response;
};

// No type dictionary from long to short terms
export const noTypeDictionary = flattenDictionary(dictionary);

// Short to long terms
export const reversedDictionary = {
	...Object.entries(noTypeDictionary).reduce(
		(acc, [key, val]) => ({ ...acc, [val]: key }),
		{}
	),
};

export default dictionary;
