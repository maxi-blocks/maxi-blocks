{"version":3,"sources":["@wordpress/compose/src/hooks/use-resize-observer/index.native.js"],"names":["useResizeObserver","measurements","setMeasurements","onLayout","nativeEvent","layout","width","height","prevState","observer","StyleSheet","absoluteFill"],"mappings":";;;;;;;;;AAOA;;;;AAJA;;AAHA;;;;AAIA;;;;AAKA;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAAA,kBACW,uBAAU,IAAV,CADX;AAAA;AAAA,MACvBC,YADuB;AAAA,MACTC,eADS;;AAG/B,MAAMC,QAAQ,GAAG,0BAAa,gBAAuB;AAAA,QAAnBC,WAAmB,QAAnBA,WAAmB;AAAA,8BAC1BA,WAAW,CAACC,MADc;AAAA,QAC5CC,KAD4C,uBAC5CA,KAD4C;AAAA,QACrCC,MADqC,uBACrCA,MADqC;AAEpDL,IAAAA,eAAe,CAAE,UAAEM,SAAF,EAAiB;AACjC,UACC,CAAEA,SAAF,IACAA,SAAS,CAACF,KAAV,KAAoBA,KADpB,IAEAE,SAAS,CAACD,MAAV,KAAqBA,MAHtB,EAIE;AACD,eAAO;AAAED,UAAAA,KAAK,EAALA,KAAF;AAASC,UAAAA,MAAM,EAANA;AAAT,SAAP;AACA;;AACD,aAAOC,SAAP;AACA,KATc,CAAf;AAUA,GAZgB,EAYd,EAZc,CAAjB;AAcA,MAAMC,QAAQ,GACb,4BAAC,iBAAD;AAAM,IAAA,KAAK,EAAGC,wBAAWC,YAAzB;AAAwC,IAAA,QAAQ,EAAGR;AAAnD,IADD;AAIA,SAAO,CAAEM,QAAF,EAAYR,YAAZ,CAAP;AACA,CAtBD;;eAwBeD,iB","sourcesContent":["/**\n * External dependencies\n */\nimport { View, StyleSheet } from 'react-native';\n/**\n * WordPress dependencies\n */\nimport { useState, useCallback } from '@wordpress/element';\n\n/**\n * Hook which allows to listen the resize event of any target element when it changes sizes.\n *\n * @return {Array} An array of {Element} `resizeListener` and {?Object} `sizes` with properties `width` and `height`\n *\n * @example\n *\n * ```js\n * const App = () => {\n * \tconst [ resizeListener, sizes ] = useResizeObserver();\n *\n * \treturn (\n * \t\t<View>\n * \t\t\t{ resizeListener }\n * \t\t\tYour content here\n * \t\t</View>\n * \t);\n * };\n * ```\n *\n */\nconst useResizeObserver = () => {\n\tconst [ measurements, setMeasurements ] = useState( null );\n\n\tconst onLayout = useCallback( ( { nativeEvent } ) => {\n\t\tconst { width, height } = nativeEvent.layout;\n\t\tsetMeasurements( ( prevState ) => {\n\t\t\tif (\n\t\t\t\t! prevState ||\n\t\t\t\tprevState.width !== width ||\n\t\t\t\tprevState.height !== height\n\t\t\t) {\n\t\t\t\treturn { width, height };\n\t\t\t}\n\t\t\treturn prevState;\n\t\t} );\n\t}, [] );\n\n\tconst observer = (\n\t\t<View style={ StyleSheet.absoluteFill } onLayout={ onLayout } />\n\t);\n\n\treturn [ observer, measurements ];\n};\n\nexport default useResizeObserver;\n"]}