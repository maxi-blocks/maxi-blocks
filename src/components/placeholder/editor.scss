.maxi-placeholder.maxi-placeholder {
	// This needs specificity to override individual block styles.
	box-sizing: var(--maxi-box-sizing-border-box);
	position: var(--maxi-layout-relative);
	padding: var(--maxi-space-1em);
	width: 100%;
	text-align: var(--maxi-text-align-left);
	margin: var(--maxi-space-0px);
	color: var(--maxi-grey-dark);

	// Some editor styles unset this.
	-moz-font-smoothing: var(--maxi-font-smoothing-subpixel-antialiased);
	-webkit-font-smoothing: var(--maxi-font-smoothing-subpixel-antialiased);

	// IE11 doesn't read rules inside this query. They are applied only to modern browsers.
	@supports (position: sticky) {
		display: var(--maxi-display-flex);
		flex-direction: var(--maxi-flex-direction-column);
		justify-content: var(--maxi-layout-center);
		align-items: var(--maxi-layout-flex-start);
	}

	// Block UI appearance.
	border-radius: var(--maxi-radius-2px);
	background-color: var(--maxi-white);

	.components-base-control__label {
		font-size: var(--maxi-font-size-18pt);
	}
}

.maxi-placeholder__error,
.maxi-placeholder__instructions,
.maxi-placeholder__label,
.maxi-placeholder__fieldset {
	font-family: var(--maxi-font-system);
	font-size: var(--maxi-font-size-13px);
}

.maxi-placeholder__label {
	display: var(--maxi-display-flex);
	font-weight: var(--maxi-font-weight-600);
	align-items: var(--maxi-layout-center);

	svg {
		width: var(--maxi-layout-full-width);
		height: var(--maxi-layout-full-width);
		margin: var(--maxi-layout-auto);
	}

	// Don't take up space if the label is empty.
	&:empty {
		display: var(--maxi-display-none);
	}
}

.maxi-placeholder__fieldset,
.maxi-placeholder__fieldset form {
	display: var(--maxi-display-flex);
	flex-direction: var(--maxi-flex-direction-row);
	width: var(--maxi-layout-full-width);
	flex-wrap: var(--maxi-flex-wrap);

	p {
		font-family: var(--maxi-font-system);
		font-size: var(--maxi-font-size-13px);
	}
}

.maxi-placeholder__fieldset.is-column-layout,
.maxi-placeholder__fieldset.is-column-layout form {
	flex-direction: var(--maxi-flex-direction-column);
}

.maxi-placeholder__input[type='url'] {
	margin: var(--maxi-space-0px) var(--maxi-space-8px) var(--maxi-space-0px)
		var(--maxi-space-0px);
	flex: var(--maxi-flex-grow-1) var(--maxi-flex-grow-1)
		var(--maxi-flex-grow-auto);
}

.maxi-placeholder__instructions {
	margin-bottom: var(--maxi-space-1em);
}

.maxi-placeholder__error {
	margin-top: var(--maxi-space-1em);
	width: var(--maxi-layout-full-width);
}

.maxi-placeholder__preview img {
	margin: var(--maxi-space-3-percent) !important;
	width: var(--maxi-layout-50-percent) !important;
}

.maxi-placeholder__fieldset .components-button {
	margin-right: var(--maxi-space-12px);
	margin-bottom: var(
		--maxi-space-12px
	); // If buttons wrap we need vertical space between.

	&:last-child {
		margin-bottom: var(--maxi-space-0px);
		margin-right: var(--maxi-space-0px);
	}
}

// Any `<Button />` component with `isLink` prop will need extra spacing if placed
// immediately after a button which is *not* an `isLink` style button. This is because
// `isLink` has no padding so we need to account for this to avoid the buttons butting
// up against each other. If it's the last item we don't need a right margin.
.maxi-placeholder__fieldset
	.components-button:not(.is-link)
	~ .components-button.is-link {
	margin-left: var(
		--maxi-space-10px
	); // equal to standard button inner padding
	margin-right: var(
		--maxi-space-10px
	); // equal to standard button inner padding

	&:last-child {
		margin-right: var(--maxi-space-0px);
	}
}

// Element queries to show different layouts at various sizes.
.maxi-placeholder {
	// Medium and large sizes.
	&.is-large {
		.maxi-placeholder__label {
			font-size: var(--maxi-font-size-18pt);
			font-weight: var(--maxi-font-weight-normal);
			margin: var(--maxi-space-0px) var(--maxi-layout-auto);
		}

		.maxi-placeholder__instructions {
			position: var(--maxi-layout-absolute);
			bottom: var(--maxi-space-40px);
			left: var(--maxi-space-0px);
			width: var(--maxi-layout-full-width);
			text-align: center;
			font-size: var(--maxi-font-size-18px);
			color: var(--maxi-grey);
		}
	}

	// Medium and small sizes.
	&.is-medium,
	&.is-small {
		.maxi-placeholder__instructions {
			display: var(--maxi-display-none);
		}

		.maxi-placeholder__fieldset,
		.maxi-placeholder__fieldset form {
			flex-direction: var(--maxi-flex-direction-column);
		}

		.maxi-placeholder__fieldset .components-button {
			margin-right: var(--maxi-layout-auto);
		}
	}

	// Small sizes.
	&.is-small {
		.components-button {
			padding: var(--maxi-space-0px) var(--maxi-space-8px)
				var(--maxi-space-2px);
		}
	}
}
