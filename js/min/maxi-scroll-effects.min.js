/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./js/maxi-scroll-effects.js":
/*!***********************************!*\
  !*** ./js/maxi-scroll-effects.js ***!
  \***********************************/
/***/ (function() {

eval("class ScrollEffects {\n\tconstructor() {\n\t\tthis.scrollData = this.getElements();\n\t\tthis.init();\n\t\tthis.oldValue = 0;\n\t}\n\n\tinit() {\n\t\tthis.startingEffect();\n\n\t\t// eslint-disable-next-line @wordpress/no-global-event-listener\n\t\tdocument.addEventListener('DOMContentLoaded', [\n\t\t\tthis.getElements.bind(this),\n\t\t\tthis.startingEffect.bind(this),\n\t\t]);\n\n\t\t// eslint-disable-next-line @wordpress/no-global-event-listener\n\t\twindow.addEventListener('scroll', this.effectsOnScroll.bind(this));\n\t}\n\n\tgetElements = () => {\n\t\tconst response = {};\n\t\tconst elements = Array.from(\n\t\t\tdocument.querySelectorAll('[data-scroll-effect-type]')\n\t\t);\n\n\t\telements.forEach(element => {\n\t\t\tconst { id } = element;\n\t\t\tresponse[id] = {};\n\t\t\tconst scrollType = element?.getAttribute('data-scroll-effect-type');\n\t\t\tconst scrollTypeArray = scrollType?.trim()?.split(' ');\n\n\t\t\tscrollTypeArray.forEach(type => {\n\t\t\t\tresponse[id][type] = this.getScrollData(element, type);\n\t\t\t});\n\t\t});\n\n\t\treturn response;\n\t};\n\n\tsetTransform = (el, transform, type) => {\n\t\tconst oldTransform = el.style.transform;\n\n\t\tif (oldTransform == null) {\n\t\t\tel.style.transform = transform;\n\t\t\tel.style.WebkitTransform = transform;\n\t\t\treturn null;\n\t\t}\n\n\t\tconst oldTransformArray = oldTransform.split(') ');\n\n\t\toldTransformArray.map((transform, key) => {\n\t\t\tif (transform.includes(type)) oldTransformArray.splice(key, 1);\n\t\t\treturn null;\n\t\t});\n\n\t\tel.style.transform = oldTransformArray.join(' ') + transform;\n\t\tel.style.WebkitTransform = oldTransformArray.join(' ') + transform;\n\n\t\treturn null;\n\t};\n\n\tsetOpacity = (el, opacity) => {\n\t\tel.style.opacity = opacity;\n\t};\n\n\tsetBlur = (el, blur) => {\n\t\tel.style.filter = `blur(${blur})`;\n\t};\n\n\tsetVertical = (el, value) => {\n\t\tel.style.top = `${value}px`;\n\t};\n\n\tsetHorizontal = (el, value) => {\n\t\tel.style.left = `${value}px`;\n\t};\n\n\tapplyStyle(el, type, value) {\n\t\tswitch (type) {\n\t\t\tcase 'rotate':\n\t\t\t\tthis.setTransform(el, `rotate(${value}deg)`, 'rotate');\n\t\t\t\tbreak;\n\t\t\tcase 'fade':\n\t\t\t\tthis.setOpacity(el, `${value}%`);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tthis.setTransform(\n\t\t\t\t\tel,\n\t\t\t\t\t`scale3d(${value}%, ${value}%, ${value}%)`,\n\t\t\t\t\t'scale'\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'blur':\n\t\t\t\tthis.setBlur(el, `${value}px`);\n\t\t\t\tbreak;\n\t\t\tcase 'vertical':\n\t\t\t\tthis.setVertical(el, value);\n\t\t\t\tbreak;\n\t\t\tcase 'horizontal':\n\t\t\t\tthis.setHorizontal(el, value);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tgetScrollSetting = data => {\n\t\tconst response = {};\n\n\t\tconst dataScrollArray = data.trim().split(' ');\n\n\t\tconst getTriggerValue = viewport => {\n\t\t\tswitch (viewport) {\n\t\t\t\tcase 'top':\n\t\t\t\t\treturn 100;\n\t\t\t\tcase 'mid':\n\t\t\t\t\treturn 50;\n\t\t\t\tcase 'bottom':\n\t\t\t\t\treturn 0;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 0;\n\t\t\t}\n\t\t};\n\n\t\tresponse.speedValue = parseFloat(dataScrollArray[0]) || 200;\n\t\tresponse.delayValue = parseFloat(dataScrollArray[1]) || 0;\n\t\tresponse.easingValue = dataScrollArray[2] || 'ease';\n\t\tresponse.trigger = getTriggerValue(dataScrollArray[3]);\n\t\tresponse.reverseScroll = dataScrollArray[4] || true;\n\t\tresponse.start = parseInt(dataScrollArray[5]);\n\t\tresponse.mid = parseInt(dataScrollArray[6]);\n\t\tresponse.end = parseInt(dataScrollArray[7]);\n\n\t\treturn response;\n\t};\n\n\tgetScrollData = (el, type) => {\n\t\treturn el.getAttribute(`data-scroll-effect-${type}-general`);\n\t};\n\n\tstartingTransform(element, type) {\n\t\tconst dataScroll = this.getScrollData(element, type);\n\t\tif (!dataScroll || !element) return null;\n\n\t\tconst { start } = this.getScrollSetting(dataScroll);\n\n\t\tthis.applyStyle(element, type, start);\n\n\t\treturn null;\n\t}\n\n\tgetScrollDirection = () => {\n\t\tconst newValue = window.pageYOffset;\n\t\tlet currentDirection = '';\n\n\t\tif (this.oldValue <= newValue) {\n\t\t\tcurrentDirection = 'down';\n\t\t} else {\n\t\t\tcurrentDirection = 'up';\n\t\t}\n\n\t\tthis.oldValue = newValue;\n\n\t\treturn currentDirection;\n\t};\n\n\tscrollTransform = (element, type, scrollDirection) => {\n\t\tconst dataScroll = this.getScrollData(element, type);\n\n\t\tif (!dataScroll) return;\n\n\t\tconst { trigger, start, mid, end, reverseScroll } =\n\t\t\tthis.getScrollSetting(dataScroll);\n\n\t\tconst rect = element.getBoundingClientRect();\n\t\tconst windowHeight = window.innerHeight;\n\t\tconst windowHalfHeight = windowHeight / 2;\n\t\tconst elementHeight = element.offsetHeight;\n\t\tconst elementHalfHeight = elementHeight / 2;\n\n\t\t// Top shift\n\t\tlet topShiftPx = 0; // top\n\n\t\tswitch (trigger) {\n\t\t\tcase 50: // mid\n\t\t\t\ttopShiftPx = windowHalfHeight;\n\t\t\t\tbreak;\n\t\t\tcase 0: // bottom\n\t\t\t\ttopShiftPx = windowHeight;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tlet elementTopInCoordinate = Math.round(rect.top);\n\t\tlet elementBottomInCoordinate = Math.round(rect.bottom);\n\n\t\tif (topShiftPx !== 0) {\n\t\t\telementTopInCoordinate -= topShiftPx;\n\t\t\telementBottomInCoordinate -= topShiftPx;\n\t\t}\n\n\t\tconst elementMidInCoordinate = Math.round(\n\t\t\telementTopInCoordinate + elementHalfHeight\n\t\t);\n\n\t\tif (scrollDirection === 'down' && elementTopInCoordinate <= 0) {\n\t\t\tif (elementMidInCoordinate >= 0) {\n\t\t\t\t// from starting to middle\n\t\t\t\tthis.applyStyle(element, type, mid);\n\t\t\t} else {\n\t\t\t\t// from middle to the end\n\t\t\t\tthis.applyStyle(element, type, end);\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\treverseScroll === 'true' &&\n\t\t\tscrollDirection === 'up' &&\n\t\t\telementBottomInCoordinate >= 0\n\t\t) {\n\t\t\tif (elementMidInCoordinate <= 0) {\n\t\t\t\tthis.applyStyle(element, type, mid);\n\t\t\t} else {\n\t\t\t\tthis.applyStyle(element, type, start);\n\t\t\t}\n\t\t}\n\t};\n\n\teffectsOnScroll = () => {\n\t\tconst scrollDirection = this.getScrollDirection();\n\t\tObject.entries(this.scrollData).forEach(([id, effect]) => {\n\t\t\tconst element = document.getElementById(id);\n\t\t\tObject.entries(effect).forEach(([type]) => {\n\t\t\t\tthis.scrollTransform(element, type, scrollDirection);\n\t\t\t});\n\t\t});\n\t};\n\n\t// eslint-disable-next-line class-methods-use-this\n\tstartingEffect() {\n\t\tObject.entries(this.scrollData).forEach(([id, effect]) => {\n\t\t\tlet transition = '';\n\t\t\tconst element = document.getElementById(id);\n\t\t\tObject.entries(effect).forEach(([type, data]) => {\n\t\t\t\tconst { speedValue, easingValue, delayValue } =\n\t\t\t\t\tthis.getScrollSetting(data);\n\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase 'vertical':\n\t\t\t\t\t\ttransition += `top ${speedValue}ms ${easingValue} ${delayValue}ms, `;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'horizontal':\n\t\t\t\t\t\ttransition += `left ${speedValue}ms ${easingValue} ${delayValue}ms, `;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\ttransition += `transform ${speedValue}ms ${easingValue} ${delayValue}ms, `;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\ttransition += `transform ${speedValue}ms ${easingValue} ${delayValue}ms, `;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'fade':\n\t\t\t\t\t\ttransition += `opacity ${speedValue}ms ${easingValue} ${delayValue}ms, `;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blur':\n\t\t\t\t\t\ttransition += `filter ${speedValue}ms ${easingValue} ${delayValue}ms, `;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis.startingTransform(element, type);\n\t\t\t});\n\t\t\tif (transition !== '')\n\t\t\t\telement.style.transition = transition.substring(\n\t\t\t\t\t0,\n\t\t\t\t\ttransition.length - 2\n\t\t\t\t);\n\t\t});\n\t}\n}\n\n// eslint-disable-next-line @wordpress/no-global-event-listener\nwindow.addEventListener('DOMContentLoaded', () => {\n\t// eslint-disable-next-line no-new\n\tnew ScrollEffects();\n});\n\n\n//# sourceURL=webpack://maxi-blocks/./js/maxi-scroll-effects.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./js/maxi-scroll-effects.js"]();
/******/ 	
/******/ })()
;