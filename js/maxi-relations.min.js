const breakpoints=["general","xxl","xl","l","m","s","xs"],relations=()=>{const e=(e,t)=>{const s=(e,t)=>{let n={},i={};return Object.entries(e).forEach((([e,r])=>{if(breakpoints.includes(e)&&(window.innerWidth<=r.breakpoint||!r.breakpoint)){n={...n,...r.styles};const s=s=>void 0!==t[`${s}-${e}`]?{[s]:t[`${s}-${e}`]}:{};i={...i,...s("transition-status"),...s("transition-duration"),...s("transition-delay"),...s("easing")}}else if(!r.breakpoint){const{stylesObj:o,effectsObj:a}=s(r,t);n={...n,[e]:o,isTargets:!0},i={...i,...a}}})),{stylesObj:n,effectsObj:i}},{stylesObj:n,effectsObj:i}=s(e,t);return{stylesObj:n,effectsObj:i}},t=(e,t,s)=>{if("isTargets"===e)return;const n=((e,t)=>""!==e?t.querySelectorAll(e.includes(">")?`:scope ${e}`:e):[t])(e,t);n.forEach((e=>{s(e)}))},s=(e,n,i=!1)=>{e.isTargets?Object.entries(e).forEach((([e,r])=>{t(e,n,(e=>{s(r,e,i)}))})):Object.entries(e).forEach((([e,t])=>n.style[e]=i?"":t))},n=(e,s,i,r=!1)=>{const o=i?.isTargets?Object.keys(i):null;o?o.forEach((i=>{t(i,s,(t=>{n(e,t,null,r)}))})):s.style.transition=r?"":e},i=e=>e["transition-status"]?`all ${e["transition-duration"]}s ${e["transition-delay"]}s ${e.easing}`:"all 0s 0s";maxiRelations[0]?.forEach((t=>{if(!t?.uniqueID)return;const r=document.querySelector(`.${t.trigger}`),o=document.querySelector(`.${t.uniqueID} ${t.target??""}`);let a;switch(t.action){case"hover":r.addEventListener("mouseenter",(()=>{clearTimeout(a);const{stylesObj:r,effectsObj:c}=e(t.css,t.effects);n(i(c),o,r),s(r,o)})),r.addEventListener("mouseleave",(()=>{const{stylesObj:r,effectsObj:c}=e(t.css,t.effects);s(r,o,!0),a=setTimeout((()=>{n(i(c),o,r,!0)}),1e3*t.effects["transition-duration-general"]+1e3)}));case"click":r.addEventListener("click",(()=>{const{stylesObj:r,effectsObj:a}=e(t.css,t.effects);n(i(a),o,r),s(r,o)}))}}))};window.addEventListener("load",relations),window.addEventListener("resize",relations);
