const dictionary = {
	common: {
		width: '_w',
		height: '_h',
		position: '_pos',
		content: '_c',
		svgType: '_st',
		// both: '_b',
		'clip-path': '_cp',
		preview: '_pr',
		opacity: '_o',
		origin: '_ori',
		scale: '_sc',
		rotate: '_rot',
		type: '_ty',
		startTime: '_sti',
		endTime: '_et',
		isLoop: '_il',
		isAutoplay: '_ia',
		// border: '_bo',
		mediaID: '_mi',
		mediaURL: '_mu',
		SVGElement: '_se',
		SVGData: '_sd',
	},
	accordion: {
		accordionLayout: '_acl',
		autoPaneClose: '_apc',
		isCollapsible: '_ico',
		animationDuration: '_ad',
	},
	accordionTitle: { titleLevel: '_tle' },
	accordionIcon: {},
	accordionLine: {
		line: '_li',
	},
	alignment: {
		alignment: '_a',
	},
	arrow: {
		side: '_sid',
		'show-warning-box': '_swb',
	},
	arrowIcon: {
		// first: '_fi',
		// second: '_sec',
		'spacing-vertical': '_sv',
		'spacing-horizontal': '_sh',
		// shadow: '_sha',
	},
	arrowIconHover: {},
	background: {
		layers: '_ly',
		'active-media': '_am',
		size: '_si',
		'crop-options': '_co',
		repeat: '_re',
		clip: '_clp',
		attachment: '_at',
		'parallax-speed': '_psp',
		'parallax-direction': '_pd',
		'parallax-alt': '_pal',
		'parallax-alt-selector': '_pas',
		parallax: '_pa',
		loop: '_loo',
		fallbackID: '_fi',
		fallbackURL: '_fu',
		playOnMobile: '_pm',
		'reduce-border': '_rb',
	},
	backgroundActive: {},
	backgroundHover: {},
	border: {
		style: '_s',
	},
	borderActive: {},
	borderHover: {},
	boxShadow: {
		inset: '_in',
		horizontal: '_ho',
		vertical: '_v',
		blur: '_blu',
		spread: '_sp',
	},
	boxShadowActive: {},
	boxShadowHover: {},
	breakpoints: {
		breakpoints: '_bp',
	},
	clipPath: {},
	clipPathHover: {},
	columnSize: {
		'column-size': '_cs',
		'column-fit-content': '_cfc',
	},
	customCss: {
		'custom-css': '_ccs',
	},
	display: {
		display: '_d',
	},
	displayHover: {},
	divider: {
		'line-align': '_la',
		'line-vertical': '_lv',
		'line-horizontal': '_lh',
		'line-orientation': '_lo',
	},
	dividerHover: {},
	dotIcon: {
		'spacing-between': '_sb',
	},
	dotIconActive: {},
	dotIconHover: {},
	dynamicContent: {
		error: '_er',
		relation: '_rel',
		id: '_id',
		author: '_au',
		show: '_sho',
		field: '_f',
		format: '_fo',
		'custom-format': '_cfo',
		'custom-date': '_cd',
		year: '_y',
		month: '_mo',
		day: '_da',
		hour: '_hou',
		hour12: '_h12',
		minute: '_min',
		second: '_sec',
		locale: '_loc',
		timezone: '_tz',
		'timezone-name': '_tzn',
		weekday: '_wd',
		era: '_era',
		limit: '_lim',
		'media-id': '_mid',
		'media-url': '_mur',
		'media-caption': '_mc',
		'link-url': '_lur',
	},
	flex: {
		'flex-grow': '_fg',
		'flex-shrink': '_fls',
		'flex-basis': '_fb',
		'flex-wrap': '_flw',
		'justify-content': '_jc',
		'flex-direction': '_fd',
		'align-items': '_ai',
		'align-content': '_ac',
		'row-gap': '_rg',
		'column-gap': '_cg',
		order: '_or',
	},
	global: {
		'maxi-version-current': '_mvc',
		'maxi-version-origin': '_mvo',
		blockStyle: '_bs',
		extraClassName: '_ecn',
		anchorLink: '_al',
		isFirstOnHierarchy: '_ioh',
		linkSettings: '_lse',
		uniqueID: '_uid',
		customLabel: '_cl',
		relations: '_r',
	},
	hover: {
		extension: '_ex',
		'basic-effect-type': '_bet',
		'text-effect-type': '_tety',
		'text-preset': '_tp',
		'transition-easing': '_te',
		'transition-easing-cubic-bezier': '_tecb',
		'transition-duration': '_tdu',
		'basic-zoom-in-value': '_bziv',
		'basic-zoom-out-value': '_bzov',
		'basic-slide-value': '_bsv',
		'basic-rotate-value': '_brv',
		'basic-blur-value': '_bbv',
	},
	icon: {
		inherit: '_i',
		only: '_on',
		spacing: '_spa',
	},
	iconBorder: {},
	iconBorderHover: {},
	iconHover: {},
	image: {
		imageRatio: '_ir',
		captionType: '_ct',
		captionContent: '_cco',
		captionPosition: '_cpo',
		'caption-gap': '_cga',
		imageSize: '_is',
		cropOptions: '_cop',
		isImageUrl: '_iiu',
		altSelector: '_as',
		mediaAlt: '_mal',
		mediaWidth: '_mew',
		mediaHeight: '_meh',
		imgWidth: '_iw',
		useInitSize: '_uis',
		fitParentSize: '_fps',
		'object-size': '_os',
		'object-position-horizontal': '_oph',
		'object-position-vertical': '_opv',
	},
	imageShape: {
		'flip-x': '_fx',
		'flip-y': '_fy',
	},
	link: {
		link: '_l',
		'link-hover': '_lih',
		'link-active': '_lia',
		'link-visited': '_liv',
	},
	map: {
		provider: '_pro',
		latitude: '_lat',
		longitude: '_lon',
		zoom: '_z',
		'min-zoom': '_mz',
		'max-zoom': '_mzo',
		markers: '_mar',
	},
	mapInteraction: {
		dragging: '_dr',
		'touch-zoom': '_tzo',
		'double-click-zoom': '_dcz',
		'scroll-wheel-zoom': '_swz',
	},
	mapMarker: {
		marker: '_ma',
		'marker-icon': '_mic',
	},
	mapPopup: {},
	mapPopupText: {
		'marker-heading-level': '_mhl',
	},
	margin: {
		margin: '_m',
	},
	navigation: {},
	numberCounter: {
		'width-auto': '_wa',
		'percentage-sign': '_psi',
		rounded: '_rou',
		circle: '_ci',
		start: '_sta',
		end: '_e',
		duration: '_du',
		'start-animation': '_san',
		'start-animation-offset': '_saof',
	},
	opacity: {},
	opacityHover: {},
	overflow: {
		'overflow-x': '_ox',
		'overflow-y': '_oy',
	},
	padding: {
		padding: '_p',
	},
	placeholderColor: {},
	position: {},
	rowPattern: {
		'row-pattern': '_rp',
	},
	scroll: {
		// It's a whole world lol
	},
	searchButton: {
		buttonSkin: '_bus',
		iconRevealAction: '_ira',
		buttonContent: '_bc',
		buttonContentClose: '_bcc',
	},
	shape: {
		'shape-width': '_sw',
	},
	shapeDivider: {
		'shape-style': '_ss',
		effects: '_ef',
	},
	size: {
		'size-advanced-options': '_sao',
		'width-fit-content': '_wfc',
		'force-aspect-ratio': '_far',
		'full-width': '_fw',
		'max-width': '_mw',
		'max-height': '_mh',
		'min-width': '_miw',
		'min-height': '_mih',
	},
	slider: {
		isEditView: '_iev',
		numberOfSlides: '_nos',
		pauseOnHover: '_poh',
		pauseOnInteraction: '_poi',
		'slider-autoplay-speed': '_sas',
		'slider-transition': '_slt',
		'slider-transition-speed': '_sts',
	},
	svg: {
		svg: '_svg',
		altTitle: '_ati',
		altDescription: '_ade',
		openFirstTime: '_oft',
		stroke: '_str',
	},
	text: {
		textLevel: '_tl',
		isList: '_ili',
		typeOfList: '_tol',
		listStart: '_lst',
		listReversed: '_lr',
		'list-gap': '_lg',
		'list-paragraph-spacing': '_lps',
		'list-indent': '_lin',
		'list-marker-size': '_lms',
		'list-marker-indent': '_lmi',
		'list-marker-line-height': '_lmlh',
		'list-text-position': '_ltp',
		'list-style-position': '_lsp',
		listStyle: '_lsty',
		listStyleCustom: '_lsc',
	},
	textAlignment: {
		'text-alignment': '_ta',
	},
	transform: {
		translate: '_tr',
		target: '_tar',
	},
	transition: {
		transition: '_t',
		'transition-change-all': '_tca',
		easing: '_ea',
		'transition-delay': '_tde',
		'transition-status': '_ts',
		split: '_spl',
	},
	typography: {
		'font-family': '_ff',
		'font-size': '_fs',
		'line-height': '_lhe',
		'letter-spacing': '_ls',
		'font-weight': '_fwe',
		'text-transform': '_ttr',
		'font-style': '_fst',
		'text-decoration': '_td',
		'text-indent': '_ti',
		'text-shadow': '_tsh',
		'vertical-align': '_va',
		'custom-formats': '_cf',
		'text-orientation': '_to',
		'text-direction': '_tdi',
		'white-space': '_ws',
		'word-spacing': '_wsp',
		'bottom-gap': '_bg',
	},
	typographyHover: {},
	video: {
		url: '_u',
		embedUrl: '_eu',
		videoRatio: '_vr',
		popupRatio: '_pra',
		videoType: '_vt',
		isMuted: '_im',
		showPlayerControls: '_spc',
		playerType: '_pt',
		hideImage: '_hi',
		popAnimation: '_pan',
	},
	videoPopup: {},
	zIndex: {
		'z-index': '_zi',
	},
};

const transitionObjKeys = {
	canvas: 'c',
	block: 'b',
	transform: 't',
	selected: 's',
	border: 'bo',
	background: 'bg',
	button: 'bt',
	icon: 'i',
	svg: 's',
	'close icon': 'ci',
	'play icon': 'pi',
	'box shadow': 'bs',
	colour: 'co',
	two: '2',
	width: 'w',
	typography: 'ty',
	'background / layer': 'bl',
	opacity: 'o',
	title: 'ti',
	target: 'ta',
	property: 'p',
	hoverProp: 'hp',
	limitless: 'l',
	'clip path': 'cp',
	pane: 'pa',
	header: 'he',
	input: 'in',
	reveal: 'r',
	appear: 'a',
	link: 'li',
	overlay: 'ov',
	isTransform: 'it',
	line: 'ln',
	content: 'cn',
};

export const reversedTransitionKeys = Object.keys(transitionObjKeys).reduce(
	(acc, key) => {
		acc[transitionObjKeys[key]] = key;
		return acc;
	},
	{}
);

export const prefixesDictionary = {
	'active-': 'a-',
	'arrow-': 'ar-',
	'background-': 'b-',
	'background-color-': 'bc-',
	'background-color-wrapper-': 'bcw-',
	'background-gradient-': 'bg-',
	'background-gradient-wrapper-': 'bgw-',
	'background-image-': 'bi-',
	'background-image-wrapper-': 'biw-',
	'background-svg-': 'bsv-',
	'background-video-': 'bv-',
	'background-video-wrapper-': 'bvw-',
	'block-background-': 'bb-',
	'border-': 'bo-',
	'box-shadow-': 'bs-',
	'button-': 'bt-',
	'close-': 'cl-',
	'content-': 'c-',
	'dc-': 'dc-',
	'description-': 'd-',
	'divider-': 'di-',
	'fill-': 'f-',
	'first-': 'fi-',
	'header-': 'he-',
	'hover-': 'h-',
	'hover-content-': 'hc-',
	'icon-': 'i-',
	'image-shape-': 'is-',
	'image-': 'im-',
	'input-': 'in-',
	'lightbox-': 'lb-',
	'list-': 'l-',
	'line-': 'li-',
	'map-': 'm-',
	'navigation-arrow-': 'na-',
	'navigation-arrow-both-': 'nab-',
	'navigation-arrow-first-': 'naf-',
	'navigation-arrow-second-': 'nas-',
	'navigation-dot-': 'nd-',
	'number-counter-': 'nc-',
	'number-counter-circle-background-': 'nccb-',
	'number-counter-circle-bar-': 'nccba-',
	'number-counter-text-': 'nct-',
	'overlay-': 'o-',
	'overlay-media-': 'om-',
	'placeholder-': 'pla-',
	'play-': 'pl-',
	'popup-': 'p-',
	'second-': 'se-',
	'shape-divider-bottom-': 'sdb-',
	'shape-divider-top-': 'sdt-',
	'shape-fill-': 'sf-',
	'stroke-': 'str-',
	'svg-': 's-',
	'svg-fill-': 'sfi-',
	'svg-line-': 'sli-',
	'title-': 'ti-',
	'transform-': 'tr-',
	'typography-': 't-',
	'video-': 'v-',
	'visited-': 'vi-',
};

export const suffixesDictionary = {
	'-status': '.s',
	'-status-hover': '.sh',
	'-status-active': '.sa',
	'-hover': '.h',
	'-unit': '.u',
	'-top': '.t',
	'-right': '.r',
	'-bottom': '.b',
	'-left': '.l',
	'-top-left': '.tl',
	'-top-right': '.tr',
	'-bottom-left': '.bl',
	'-bottom-right': '.br',
	'-radius': '.ra',
	'-sync': '.sy',
	'-global': '.g',
	'-all': '.a',
	// '-g': '-g',
};

export const colorDictionary = {
	'palette-color': '_pc',
	'palette-opacity': '_po',
	'palette-status': '_ps', // exception of status
	'custom-color': '_cc',
	color: '_col',
};

const flattenDictionary = dict => {
	let response = {};

	Object.entries(dict).forEach(([key, val]) => {
		response = {
			...response,
			...val,
		};
	});

	return response;
};

// No type dictionary from long to short terms
export const noTypeDictionary = flattenDictionary(dictionary);

// Short to long terms
export const reversedDictionary = {
	...Object.entries(noTypeDictionary).reduce(
		(acc, [key, val]) => ({ ...acc, [val]: key }),
		{}
	),
};

export const prefixesReversedDictionary = {
	...Object.entries(prefixesDictionary).reduce(
		(acc, [key, val]) => ({ ...acc, [val]: key }),
		{}
	),
};

export const suffixesReversedDictionary = {
	...Object.entries(suffixesDictionary).reduce(
		(acc, [key, val]) => ({ ...acc, [val]: key }),
		{}
	),
};

export const colorReversedDictionary = {
	...Object.entries(colorDictionary).reduce(
		(acc, [key, val]) => ({ ...acc, [val]: key }),
		{}
	),
};

export const allReversedDictionary = {
	...prefixesReversedDictionary,
	...suffixesReversedDictionary,
	...colorReversedDictionary,
	...reversedDictionary,
};

export default dictionary;
